{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isKYC",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "KYCUpdatedEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "customer",
          "type": "address"
        }
      ],
      "name": "ReceivedNewRequestIdEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "name": "newOracleAddressEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_customerId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isKYC",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerAuthorization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerDate",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracleInstanceAddress",
          "type": "address"
        }
      ],
      "name": "setOracleInstanceAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "updateKYC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/Oracle/Caller.sol",
    "15": "contracts/Oracle/OracleInterface.sol"
  },
  "ast": {
    "absolutePath": "contracts/Oracle/Caller.sol",
    "exportedSymbols": {
      "CallerContract": [
        2707
      ],
      "Context": [
        3818
      ],
      "OracleInterface": [
        2870
      ],
      "Ownable": [
        2974
      ]
    },
    "id": 2708,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2472,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/home/mrhamm/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "id": 2473,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2708,
        "sourceUnit": 2975,
        "src": "25:80:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Oracle/OracleInterface.sol",
        "file": "./OracleInterface.sol",
        "id": 2474,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2708,
        "sourceUnit": 2871,
        "src": "106:31:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2475,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2974,
              "src": "166:7:12"
            },
            "id": 2476,
            "nodeType": "InheritanceSpecifier",
            "src": "166:7:12"
          }
        ],
        "canonicalName": "CallerContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2707,
        "linearizedBaseContracts": [
          2707,
          2974,
          3818
        ],
        "name": "CallerContract",
        "nameLocation": "148:14:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2479,
            "mutability": "mutable",
            "name": "isKYC",
            "nameLocation": "194:5:12",
            "nodeType": "VariableDeclaration",
            "scope": 2707,
            "src": "181:26:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2477,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "181:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2478,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "202:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2482,
            "mutability": "mutable",
            "name": "oracleInstance",
            "nameLocation": "237:14:12",
            "nodeType": "VariableDeclaration",
            "scope": 2707,
            "src": "213:38:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OracleInterface_$2870",
              "typeString": "contract OracleInterface"
            },
            "typeName": {
              "id": 2481,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2480,
                "name": "OracleInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2870,
                "src": "213:15:12"
              },
              "referencedDeclaration": 2870,
              "src": "213:15:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$2870",
                "typeString": "contract OracleInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2484,
            "mutability": "mutable",
            "name": "oracleAddress",
            "nameLocation": "273:13:12",
            "nodeType": "VariableDeclaration",
            "scope": 2707,
            "src": "257:29:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2483,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2488,
            "mutability": "mutable",
            "name": "myRequests",
            "nameLocation": "315:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 2707,
            "src": "292:33:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 2487,
              "keyType": {
                "id": 2485,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "300:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "292:22:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 2486,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "309:4:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CallerContract.customer",
            "id": 2495,
            "members": [
              {
                "constant": false,
                "id": 2490,
                "mutability": "mutable",
                "name": "customerId",
                "nameLocation": "366:10:12",
                "nodeType": "VariableDeclaration",
                "scope": 2495,
                "src": "358:18:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2489,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "358:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2492,
                "mutability": "mutable",
                "name": "expireyDate",
                "nameLocation": "393:11:12",
                "nodeType": "VariableDeclaration",
                "scope": 2495,
                "src": "386:18:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 2491,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "386:6:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2494,
                "mutability": "mutable",
                "name": "isAuthorized",
                "nameLocation": "419:12:12",
                "nodeType": "VariableDeclaration",
                "scope": 2495,
                "src": "414:17:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2493,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "414:4:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "customer",
            "nameLocation": "339:8:12",
            "nodeType": "StructDefinition",
            "scope": 2707,
            "src": "332:106:12",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2500,
            "mutability": "mutable",
            "name": "customerRegistry",
            "nameLocation": "474:16:12",
            "nodeType": "VariableDeclaration",
            "scope": 2707,
            "src": "444:46:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
              "typeString": "mapping(address => struct CallerContract.customer)"
            },
            "typeName": {
              "id": 2499,
              "keyType": {
                "id": 2496,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "453:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "444:29:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
                "typeString": "mapping(address => struct CallerContract.customer)"
              },
              "valueType": {
                "id": 2498,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2497,
                  "name": "customer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2495,
                  "src": "464:8:12"
                },
                "referencedDeclaration": 2495,
                "src": "464:8:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_customer_$2495_storage_ptr",
                  "typeString": "struct CallerContract.customer"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 2504,
            "name": "newOracleAddressEvent",
            "nameLocation": "504:21:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2502,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oracleAddress",
                  "nameLocation": "534:13:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2504,
                  "src": "526:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:23:12"
            },
            "src": "498:51:12"
          },
          {
            "anonymous": false,
            "id": 2510,
            "name": "ReceivedNewRequestIdEvent",
            "nameLocation": "560:25:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "594:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2510,
                  "src": "586:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2508,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "customer",
                  "nameLocation": "606:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2510,
                  "src": "598:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:30:12"
            },
            "src": "554:62:12"
          },
          {
            "anonymous": false,
            "id": 2516,
            "name": "KYCUpdatedEvent",
            "nameLocation": "627:15:12",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2512,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isKYC",
                  "nameLocation": "648:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2516,
                  "src": "643:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2511,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2514,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "663:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2516,
                  "src": "655:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2513,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:24:12"
            },
            "src": "621:46:12"
          },
          {
            "body": {
              "id": 2537,
              "nodeType": "Block",
              "src": "756:163:12",
              "statements": [
                {
                  "expression": {
                    "id": 2525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2523,
                      "name": "oracleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2484,
                      "src": "766:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2524,
                      "name": "_oracleInstanceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2518,
                      "src": "782:22:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2526,
                  "nodeType": "ExpressionStatement",
                  "src": "766:38:12"
                },
                {
                  "expression": {
                    "id": 2531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2527,
                      "name": "oracleInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2482,
                      "src": "814:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$2870",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2529,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2484,
                          "src": "847:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2528,
                        "name": "OracleInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2870,
                        "src": "831:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleInterface_$2870_$",
                          "typeString": "type(contract OracleInterface)"
                        }
                      },
                      "id": 2530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "831:30:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$2870",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "src": "814:47:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleInterface_$2870",
                      "typeString": "contract OracleInterface"
                    }
                  },
                  "id": 2532,
                  "nodeType": "ExpressionStatement",
                  "src": "814:47:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2534,
                        "name": "oracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "898:13:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2533,
                      "name": "newOracleAddressEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2504,
                      "src": "876:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:36:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2536,
                  "nodeType": "EmitStatement",
                  "src": "871:41:12"
                }
              ]
            },
            "functionSelector": "e9e17a9e",
            "id": 2538,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2521,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2520,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2917,
                  "src": "746:9:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "746:9:12"
              }
            ],
            "name": "setOracleInstanceAddress",
            "nameLocation": "682:24:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2518,
                  "mutability": "mutable",
                  "name": "_oracleInstanceAddress",
                  "nameLocation": "715:22:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2538,
                  "src": "707:30:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "706:32:12"
            },
            "returnParameters": {
              "id": 2522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:0:12"
            },
            "scope": 2707,
            "src": "673:246:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2561,
              "nodeType": "Block",
              "src": "970:149:12",
              "statements": [
                {
                  "assignments": [
                    2544
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2544,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "988:2:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 2561,
                      "src": "980:10:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2543,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "980:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2549,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2547,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "1015:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2545,
                        "name": "oracleInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "993:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$2870",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 2546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getKYC",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2869,
                      "src": "993:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 2548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:32:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "980:45:12"
                },
                {
                  "expression": {
                    "id": 2554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2550,
                        "name": "myRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2488,
                        "src": "1035:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2552,
                      "indexExpression": {
                        "id": 2551,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "1046:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1035:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1052:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1035:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2555,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:21:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2557,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "1098:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2558,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "1102:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2556,
                      "name": "ReceivedNewRequestIdEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2510,
                      "src": "1072:25:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 2559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2560,
                  "nodeType": "EmitStatement",
                  "src": "1067:45:12"
                }
              ]
            },
            "functionSelector": "0272ee97",
            "id": 2562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateKYC",
            "nameLocation": "934:9:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2540,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "952:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2562,
                  "src": "944:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "943:19:12"
            },
            "returnParameters": {
              "id": 2542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:0:12"
            },
            "scope": 2707,
            "src": "925:194:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2622,
              "nodeType": "Block",
              "src": "1227:346:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 2576,
                          "name": "myRequests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2488,
                          "src": "1245:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 2578,
                        "indexExpression": {
                          "id": 2577,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "1256:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1245:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1237:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1237:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2580,
                  "nodeType": "ExpressionStatement",
                  "src": "1237:24:12"
                },
                {
                  "expression": {
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2581,
                      "name": "isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "1271:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2582,
                      "name": "_isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2566,
                      "src": "1279:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1271:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2584,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:14:12"
                },
                {
                  "expression": {
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2585,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2500,
                          "src": "1295:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 2587,
                        "indexExpression": {
                          "id": 2586,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2568,
                          "src": "1312:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1295:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$2495_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 2588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "customerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2490,
                      "src": "1295:38:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2589,
                      "name": "_customerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "1335:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1295:51:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2591,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:51:12"
                },
                {
                  "expression": {
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2592,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2500,
                          "src": "1356:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 2594,
                        "indexExpression": {
                          "id": 2593,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2568,
                          "src": "1373:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1356:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$2495_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 2595,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isAuthorized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2494,
                      "src": "1356:40:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2596,
                      "name": "_isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2566,
                      "src": "1399:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1356:49:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2598,
                  "nodeType": "ExpressionStatement",
                  "src": "1356:49:12"
                },
                {
                  "expression": {
                    "id": 2610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2599,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2500,
                          "src": "1415:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 2601,
                        "indexExpression": {
                          "id": 2600,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2568,
                          "src": "1432:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1415:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$2495_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 2602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expireyDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2492,
                      "src": "1415:39:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2605,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1464:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1464:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3532",
                            "id": 2607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1482:8:12",
                            "subdenomination": "weeks",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31449600_by_1",
                              "typeString": "int_const 31449600"
                            },
                            "value": "52"
                          },
                          "src": "1464:26:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1457:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 2603,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1457:6:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1457:34:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1415:76:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 2611,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:76:12"
                },
                {
                  "expression": {
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1501:22:12",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2612,
                        "name": "myRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2488,
                        "src": "1508:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2614,
                      "indexExpression": {
                        "id": 2613,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "1519:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1508:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2616,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:22:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2618,
                        "name": "_isKYC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "1554:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2619,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "1562:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2617,
                      "name": "KYCUpdatedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2516,
                      "src": "1538:15:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256)"
                      }
                    },
                    "id": 2620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:28:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2621,
                  "nodeType": "EmitStatement",
                  "src": "1533:33:12"
                }
              ]
            },
            "functionSelector": "ddef9ac0",
            "id": 2623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2573,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2572,
                  "name": "onlyOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2634,
                  "src": "1216:10:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1216:10:12"
              }
            ],
            "name": "callback",
            "nameLocation": "1134:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2564,
                  "mutability": "mutable",
                  "name": "_customerId",
                  "nameLocation": "1151:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2623,
                  "src": "1143:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2566,
                  "mutability": "mutable",
                  "name": "_isKYC",
                  "nameLocation": "1169:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2623,
                  "src": "1164:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2568,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "1185:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2623,
                  "src": "1177:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2570,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1204:3:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2623,
                  "src": "1196:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:66:12"
            },
            "returnParameters": {
              "id": 2574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:0:12"
            },
            "scope": 2707,
            "src": "1125:448:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2633,
              "nodeType": "Block",
              "src": "1601:64:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2626,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1619:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1619:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2628,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2484,
                          "src": "1633:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1619:27:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1611:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:36:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2631,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:36:12"
                },
                {
                  "id": 2632,
                  "nodeType": "PlaceholderStatement",
                  "src": "1657:1:12"
                }
              ]
            },
            "id": 2634,
            "name": "onlyOracle",
            "nameLocation": "1588:10:12",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1598:2:12"
            },
            "src": "1579:86:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2646,
              "nodeType": "Block",
              "src": "1741:64:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 2641,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "1758:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 2643,
                      "indexExpression": {
                        "id": 2642,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2636,
                        "src": "1775:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1758:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$2495_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 2644,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isAuthorized",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2494,
                    "src": "1758:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2640,
                  "id": 2645,
                  "nodeType": "Return",
                  "src": "1751:47:12"
                }
              ]
            },
            "id": 2647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorized",
            "nameLocation": "1679:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2636,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "1701:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2647,
                  "src": "1693:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:19:12"
            },
            "returnParameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2647,
                  "src": "1735:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1734:6:12"
            },
            "scope": 2707,
            "src": "1670:135:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2658,
              "nodeType": "Block",
              "src": "1878:48:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2655,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "1909:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2654,
                      "name": "_isAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2647,
                      "src": "1895:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:24:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2653,
                  "id": 2657,
                  "nodeType": "Return",
                  "src": "1888:31:12"
                }
              ]
            },
            "functionSelector": "fe9fbb80",
            "id": 2659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorized",
            "nameLocation": "1820:12:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2649,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "1841:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2659,
                  "src": "1833:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:19:12"
            },
            "returnParameters": {
              "id": 2653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2652,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2659,
                  "src": "1872:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2651,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:6:12"
            },
            "scope": 2707,
            "src": "1811:115:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2666,
              "nodeType": "Block",
              "src": "1990:37:12",
              "statements": [
                {
                  "expression": {
                    "id": 2664,
                    "name": "oracleAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2484,
                    "src": "2007:13:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2663,
                  "id": 2665,
                  "nodeType": "Return",
                  "src": "2000:20:12"
                }
              ]
            },
            "functionSelector": "b18b78dd",
            "id": 2667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracleAddress",
            "nameLocation": "1941:16:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1957:2:12"
            },
            "returnParameters": {
              "id": 2663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2662,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2667,
                  "src": "1981:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:9:12"
            },
            "scope": 2707,
            "src": "1932:95:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2679,
              "nodeType": "Block",
              "src": "2105:62:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 2674,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "2122:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 2676,
                      "indexExpression": {
                        "id": 2675,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2669,
                        "src": "2139:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2122:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$2495_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "customerId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2490,
                    "src": "2122:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2673,
                  "id": 2678,
                  "nodeType": "Return",
                  "src": "2115:45:12"
                }
              ]
            },
            "functionSelector": "3a521b87",
            "id": 2680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerId",
            "nameLocation": "2042:13:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2669,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "2064:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "2056:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2055:19:12"
            },
            "returnParameters": {
              "id": 2673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "2096:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:9:12"
            },
            "scope": 2707,
            "src": "2033:134:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2692,
              "nodeType": "Block",
              "src": "2245:63:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 2687,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "2262:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 2689,
                      "indexExpression": {
                        "id": 2688,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2682,
                        "src": "2279:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2262:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$2495_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 2690,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "expireyDate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2492,
                    "src": "2262:39:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 2686,
                  "id": 2691,
                  "nodeType": "Return",
                  "src": "2255:46:12"
                }
              ]
            },
            "functionSelector": "c944d2ca",
            "id": 2693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerDate",
            "nameLocation": "2181:15:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2682,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "2205:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2197:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2197:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2196:19:12"
            },
            "returnParameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2693,
                  "src": "2237:6:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2236:8:12"
            },
            "scope": 2707,
            "src": "2172:136:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2705,
              "nodeType": "Block",
              "src": "2393:64:12",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 2700,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2500,
                        "src": "2410:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$2495_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 2702,
                      "indexExpression": {
                        "id": 2701,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2695,
                        "src": "2427:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2410:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$2495_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 2703,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isAuthorized",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2494,
                    "src": "2410:40:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2699,
                  "id": 2704,
                  "nodeType": "Return",
                  "src": "2403:47:12"
                }
              ]
            },
            "functionSelector": "650314d6",
            "id": 2706,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerAuthorization",
            "nameLocation": "2322:24:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2695,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "2355:9:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2706,
                  "src": "2347:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2346:19:12"
            },
            "returnParameters": {
              "id": 2699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2706,
                  "src": "2387:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2697,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:6:12"
            },
            "scope": 2707,
            "src": "2313:144:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2708,
        "src": "139:2320:12",
        "usedErrors": []
      }
    ],
    "src": "0:2459:12"
  },
  "bytecode": "60806040526000805460ff60a01b1916905534801561001d57600080fd5b506100273361002c565b61007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107c48061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b18b78dd11610081578063e9e17a9e1161005b578063e9e17a9e146101fe578063f2fde38b14610211578063fe9fbb801461011f57600080fd5b8063b18b78dd14610193578063c944d2ca146101a4578063ddef9ac0146101eb57600080fd5b8063650314d6116100b2578063650314d61461011f578063715018a6146101665780638da5cb5b1461016e57600080fd5b80630272ee97146100ce5780633a521b87146100e3575b600080fd5b6100e16100dc3660046106e2565b610224565b005b61010c6100f13660046106e2565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b61015661012d3660046106e2565b6001600160a01b0316600090815260046020526040902060010154640100000000900460ff1690565b6040519015158152602001610116565b6100e1610310565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610116565b6002546001600160a01b031661017b565b6101d66101b23660046106e2565b6001600160a01b031660009081526004602052604090206001015463ffffffff1690565b60405163ffffffff9091168152602001610116565b6100e16101f9366004610704565b61037b565b6100e161020c3660046106e2565b6104c0565b6100e161021f3660046106e2565b610587565b600154604051634d1a687d60e01b81526001600160a01b0383811660048301526000921690634d1a687d90602401602060405180830381600087803b15801561026c57600080fd5b505af1158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a4919061074f565b60008181526003602052604090819020805460ff19166001179055519091507f023f92af5f59336c90c38c89410acf21801e112289cf776fbe3dfa7f300dbff79061030490839085909182526001600160a01b0316602082015260400190565b60405180910390a15050565b6000546001600160a01b0316331461036f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6103796000610669565b565b6002546001600160a01b0316331461039257600080fd5b60008181526003602052604090205460ff166103ad57600080fd5b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000008515159081029190911782556001600160a01b038416825260046020526040909120858155600101805464ff000000001916640100000000909202919091179055610438426301dfe200610768565b6001600160a01b0383166000908152600460209081526040808320600101805463ffffffff191663ffffffff95909516949094179093558382526003815290829020805460ff19169055815185151581529081018390527fbf59b978135d33813ee8e3ded58396d9328c70d082d236f1bf1db922a392c4aa910160405180910390a150505050565b6000546001600160a01b0316331461051a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610366565b600280546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff19918216811790925560018054909116821790556040519081527f441e3b056b114797955165bd03bb8393fc1658a713f09225de4745a8d068bf7d9060200160405180910390a150565b6000546001600160a01b031633146105e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610366565b6001600160a01b03811661065d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610366565b61066681610669565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146106dd57600080fd5b919050565b6000602082840312156106f457600080fd5b6106fd826106c6565b9392505050565b6000806000806080858703121561071a57600080fd5b843593506020850135801515811461073157600080fd5b925061073f604086016106c6565b9396929550929360600135925050565b60006020828403121561076157600080fd5b5051919050565b6000821982111561078957634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122040f216abe1c3e3fce06908b566af11f736b2354ff5db088e177f35309f03d88864736f6c63430008090033",
  "bytecodeSha1": "c49cddb7176bbd20a084e0b548b9997aab5691e1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 800
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "CallerContract",
  "coverageMap": {
    "branches": {
      "12": {
        "CallerContract.callback": {
          "16": [
            1245,
            1260,
            true
          ]
        }
      },
      "15": {}
    },
    "statements": {
      "12": {
        "CallerContract.callback": {
          "6": [
            1237,
            1261
          ],
          "7": [
            1271,
            1285
          ],
          "8": [
            1295,
            1346
          ],
          "9": [
            1356,
            1405
          ],
          "10": [
            1415,
            1491
          ],
          "11": [
            1501,
            1523
          ],
          "12": [
            1533,
            1566
          ]
        },
        "CallerContract.getCustomerAuthorization": {
          "1": [
            2403,
            2450
          ]
        },
        "CallerContract.getCustomerDate": {
          "3": [
            2255,
            2301
          ]
        },
        "CallerContract.getCustomerId": {
          "0": [
            2115,
            2160
          ]
        },
        "CallerContract.getOracleAddress": {
          "2": [
            2000,
            2020
          ]
        },
        "CallerContract.setOracleInstanceAddress": {
          "13": [
            766,
            804
          ],
          "14": [
            814,
            861
          ],
          "15": [
            871,
            912
          ]
        },
        "CallerContract.updateKYC": {
          "4": [
            1035,
            1056
          ],
          "5": [
            1067,
            1112
          ]
        }
      },
      "15": {}
    }
  },
  "dependencies": [
    "OracleInterface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b18b78dd11610081578063e9e17a9e1161005b578063e9e17a9e146101fe578063f2fde38b14610211578063fe9fbb801461011f57600080fd5b8063b18b78dd14610193578063c944d2ca146101a4578063ddef9ac0146101eb57600080fd5b8063650314d6116100b2578063650314d61461011f578063715018a6146101665780638da5cb5b1461016e57600080fd5b80630272ee97146100ce5780633a521b87146100e3575b600080fd5b6100e16100dc3660046106e2565b610224565b005b61010c6100f13660046106e2565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b61015661012d3660046106e2565b6001600160a01b0316600090815260046020526040902060010154640100000000900460ff1690565b6040519015158152602001610116565b6100e1610310565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610116565b6002546001600160a01b031661017b565b6101d66101b23660046106e2565b6001600160a01b031660009081526004602052604090206001015463ffffffff1690565b60405163ffffffff9091168152602001610116565b6100e16101f9366004610704565b61037b565b6100e161020c3660046106e2565b6104c0565b6100e161021f3660046106e2565b610587565b600154604051634d1a687d60e01b81526001600160a01b0383811660048301526000921690634d1a687d90602401602060405180830381600087803b15801561026c57600080fd5b505af1158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a4919061074f565b60008181526003602052604090819020805460ff19166001179055519091507f023f92af5f59336c90c38c89410acf21801e112289cf776fbe3dfa7f300dbff79061030490839085909182526001600160a01b0316602082015260400190565b60405180910390a15050565b6000546001600160a01b0316331461036f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6103796000610669565b565b6002546001600160a01b0316331461039257600080fd5b60008181526003602052604090205460ff166103ad57600080fd5b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000008515159081029190911782556001600160a01b038416825260046020526040909120858155600101805464ff000000001916640100000000909202919091179055610438426301dfe200610768565b6001600160a01b0383166000908152600460209081526040808320600101805463ffffffff191663ffffffff95909516949094179093558382526003815290829020805460ff19169055815185151581529081018390527fbf59b978135d33813ee8e3ded58396d9328c70d082d236f1bf1db922a392c4aa910160405180910390a150505050565b6000546001600160a01b0316331461051a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610366565b600280546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff19918216811790925560018054909116821790556040519081527f441e3b056b114797955165bd03bb8393fc1658a713f09225de4745a8d068bf7d9060200160405180910390a150565b6000546001600160a01b031633146105e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610366565b6001600160a01b03811661065d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610366565b61066681610669565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146106dd57600080fd5b919050565b6000602082840312156106f457600080fd5b6106fd826106c6565b9392505050565b6000806000806080858703121561071a57600080fd5b843593506020850135801515811461073157600080fd5b925061073f604086016106c6565b9396929550929360600135925050565b60006020828403121561076157600080fd5b5051919050565b6000821982111561078957634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122040f216abe1c3e3fce06908b566af11f736b2354ff5db088e177f35309f03d88864736f6c63430008090033",
  "deployedSourceMap": "139:2320:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:194;;;;;;:::i;:::-;;:::i;:::-;;2033:134;;;;;;:::i;:::-;-1:-1:-1;;;;;2122:27:12;2096:7;2122:27;;;:16;:27;;;;;:38;;2033:134;;;;552:25:16;;;540:2;525:18;2033:134:12;;;;;;;;2313:144;;;;;;:::i;:::-;-1:-1:-1;;;;;2410:27:12;2387:4;2410:27;;;:16;:27;;;;;:40;;;;;;;;;2313:144;;;;753:14:16;;746:22;728:41;;716:2;701:18;2313:144:12;588:187:16;1605:92:0;;;:::i;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;;-1:-1:-1;;;;;944:55:16;;;926:74;;914:2;899:18;973:85:0;780:226:16;1932:95:12;2007:13;;-1:-1:-1;;;;;2007:13:12;1932:95;;2172:136;;;;;;:::i;:::-;-1:-1:-1;;;;;2262:27:12;2237:6;2262:27;;;:16;:27;;;;;:39;;;;;;2172:136;;;;1185:10:16;1173:23;;;1155:42;;1143:2;1128:18;2172:136:12;1011:192:16;1125:448:12;;;;;;:::i;:::-;;:::i;673:246::-;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;925:194:12:-;993:14;;:32;;-1:-1:-1;;;993:32:12;;-1:-1:-1;;;;;944:55:16;;;993:32:12;;;926:74:16;980:10:12;;993:14;;:21;;899:18:16;;993:32:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1035:14;;;;:10;:14;;;;;;;:21;;-1:-1:-1;;1035:21:12;1052:4;1035:21;;;1072:40;980:45;;-1:-1:-1;1072:40:12;;;;980:45;;1102:9;;2060:25:16;;;-1:-1:-1;;;;;2121:55:16;2116:2;2101:18;;2094:83;2048:2;2033:18;;1886:297;1072:40:12;;;;;;;;970:149;925:194;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:3;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;2390:2:16;1177:68:0;;;2372:21:16;;;2409:18;;;2402:30;2468:34;2448:18;;;2441:62;2520:18;;1177:68:0;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1125:448:12:-;1633:13;;-1:-1:-1;;;;;1633:13:12;1619:10;:27;1611:36;;;;;;1245:15:::1;::::0;;;:10:::1;:15;::::0;;;;;::::1;;1237:24;;;::::0;::::1;;1271:5;:14:::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;1295:27:12;::::1;::::0;;:16:::1;:27;::::0;;;;;:51;;;-1:-1:-1;1356:40:12::1;:49:::0;;-1:-1:-1;;1356:49:12::1;::::0;;;::::1;::::0;;;::::1;::::0;;1464:26:::1;:15;1482:8;1464:26;:::i;:::-;-1:-1:-1::0;;;;;1415:27:12;::::1;;::::0;;;:16:::1;:27;::::0;;;;;;;:39:::1;;:76:::0;;-1:-1:-1;;1415:76:12::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;1508:15;;;:10:::1;:15:::0;;;;;;1501:22;;-1:-1:-1;;1501:22:12::1;::::0;;1538:28;;2972:14:16;;2965:22;2947:41;;3004:18;;;2997:34;;;1538:28:12::1;::::0;2920:18:16;1538:28:12::1;;;;;;;1125:448:::0;;;;:::o;673:246::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:3;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;2390:2:16;1177:68:0;;;2372:21:16;;;2409:18;;;2402:30;2468:34;2448:18;;;2441:62;2520:18;;1177:68:0;2188:356:16;1177:68:0;766:13:12::1;:38:::0;;-1:-1:-1;;;;;766:38:12;::::1;-1:-1:-1::0;;766:38:12;;::::1;::::0;::::1;::::0;;;-1:-1:-1;814:47:12;;;;::::1;::::0;::::1;::::0;;876:36:::1;::::0;926:74:16;;;876:36:12::1;::::0;914:2:16;899:18;876:36:12::1;;;;;;;673:246:::0;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:3;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;2390:2:16;1177:68:0;;;2372:21:16;;;2409:18;;;2402:30;2468:34;2448:18;;;2441:62;2520:18;;1177:68:0;2188:356:16;1177:68:0;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;3244:2:16;1926:73:0::1;::::0;::::1;3226:21:16::0;3283:2;3263:18;;;3256:30;3322:34;3302:18;;;3295:62;3393:8;3373:18;;;3366:36;3419:19;;1926:73:0::1;3042:402:16::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:196:16:-;82:20;;-1:-1:-1;;;;;131:54:16;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:16:o;1208:484::-;1291:6;1299;1307;1315;1368:3;1356:9;1347:7;1343:23;1339:33;1336:53;;;1385:1;1382;1375:12;1336:53;1421:9;1408:23;1398:33;;1481:2;1470:9;1466:18;1453:32;1528:5;1521:13;1514:21;1507:5;1504:32;1494:60;;1550:1;1547;1540:12;1494:60;1573:5;-1:-1:-1;1597:38:16;1631:2;1616:18;;1597:38;:::i;:::-;1208:484;;;;-1:-1:-1;1587:48:16;;1682:2;1667:18;1654:32;;-1:-1:-1;;1208:484:16:o;1697:184::-;1767:6;1820:2;1808:9;1799:7;1795:23;1791:32;1788:52;;;1836:1;1833;1826:12;1788:52;-1:-1:-1;1859:16:16;;1697:184;-1:-1:-1;1697:184:16:o;2549:225::-;2589:3;2620:1;2616:6;2613:1;2610:13;2607:136;;;2665:10;2660:3;2656:20;2653:1;2646:31;2700:4;2697:1;2690:15;2728:4;2725:1;2718:15;2607:136;-1:-1:-1;2759:9:16;;2549:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    139,
    2459
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB18B78DD GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE9E17A9E GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xE9E17A9E EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB18B78DD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xC944D2CA EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xDDEF9AC0 EQ PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x650314D6 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x650314D6 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x272EE97 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x3A521B87 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10C PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x156 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17B JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4D1A687D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x4D1A687D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0x23F92AF5F59336C90C38C89410ACF21801E112289CF776FBE3DFA7F300DBFF7 SWAP1 PUSH2 0x304 SWAP1 DUP4 SWAP1 DUP6 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x379 PUSH1 0x0 PUSH2 0x669 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0x10000000000000000000000000000000000000000 DUP6 ISZERO ISZERO SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP6 DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH5 0x100000000 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x438 TIMESTAMP PUSH4 0x1DFE200 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP4 DUP3 MSTORE PUSH1 0x3 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD DUP6 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xBF59B978135D33813EE8E3DED58396D9328C70D082D236F1BF1DB922A392C4AA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x366 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x441E3B056B114797955165BD03BB8393FC1658A713F09225DE4745A8D068BF7D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x366 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x366 JUMP JUMPDEST PUSH2 0x666 DUP2 PUSH2 0x669 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FD DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x73F PUSH1 0x40 DUP7 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x789 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH CALLCODE AND 0xAB 0xE1 0xC3 0xE3 0xFC 0xE0 PUSH10 0x8B566AF11F736B2354F CREATE2 0xDB ADDMOD DUP15 OR PUSH32 0x35309F03D88864736F6C63430008090033000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "6": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "7": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "12": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "REVERT",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "POP",
      "path": "12"
    },
    "18": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "21": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "LT",
      "path": "12"
    },
    "22": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC9"
    },
    "25": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "29": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "SHR",
      "path": "12"
    },
    "32": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "33": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB18B78DD"
    },
    "38": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "GT",
      "path": "12"
    },
    "39": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x81"
    },
    "42": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "43": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "44": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE9E17A9E"
    },
    "49": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "GT",
      "path": "12"
    },
    "50": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "54": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "55": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xE9E17A9E"
    },
    "60": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "61": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1FE"
    },
    "64": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "66": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "72": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x211"
    },
    "75": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "76": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "77": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFE9FBB80"
    },
    "82": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "83": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11F"
    },
    "86": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "87": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "90": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "REVERT",
      "path": "12"
    },
    "91": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "92": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "93": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xB18B78DD"
    },
    "98": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "99": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x193"
    },
    "102": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "103": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "104": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xC944D2CA"
    },
    "109": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "110": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A4"
    },
    "113": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "114": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "115": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xDDEF9AC0"
    },
    "120": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "121": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1EB"
    },
    "124": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "125": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "127": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "128": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "REVERT",
      "path": "12"
    },
    "129": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "130": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "131": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x650314D6"
    },
    "136": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "GT",
      "path": "12"
    },
    "137": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB2"
    },
    "140": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "141": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "142": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x650314D6"
    },
    "147": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "148": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x11F"
    },
    "151": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "152": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "153": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x715018A6"
    },
    "158": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "159": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x166"
    },
    "162": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "163": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "164": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x8DA5CB5B"
    },
    "169": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "170": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16E"
    },
    "173": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "174": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "176": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "177": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "REVERT",
      "path": "12"
    },
    "178": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "179": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "180": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x272EE97"
    },
    "185": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "186": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCE"
    },
    "189": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "190": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "191": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x3A521B87"
    },
    "196": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "12"
    },
    "197": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE3"
    },
    "200": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "201": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "202": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "204": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "12"
    },
    "205": {
      "first_revert": true,
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "REVERT",
      "path": "12"
    },
    "206": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "207": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE1"
    },
    "210": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xDC"
    },
    "213": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "214": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "216": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6E2"
    },
    "219": {
      "fn": "CallerContract.updateKYC",
      "jump": "i",
      "offset": [
        925,
        1119
      ],
      "op": "JUMP",
      "path": "12"
    },
    "220": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "221": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x224"
    },
    "224": {
      "fn": "CallerContract.updateKYC",
      "jump": "i",
      "offset": [
        925,
        1119
      ],
      "op": "JUMP",
      "path": "12"
    },
    "225": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "226": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "STOP",
      "path": "12"
    },
    "227": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "228": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10C"
    },
    "231": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xF1"
    },
    "234": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "235": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "237": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6E2"
    },
    "240": {
      "fn": "CallerContract.getCustomerId",
      "jump": "i",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMP",
      "path": "12"
    },
    "241": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "248": {
      "op": "SHL"
    },
    "249": {
      "op": "SUB"
    },
    "250": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "AND",
      "path": "12",
      "statement": 0
    },
    "251": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2096,
        2103
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "253": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "254": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "DUP2",
      "path": "12"
    },
    "255": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "256": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2138
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "258": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "260": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "261": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "263": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "264": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "265": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2160
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "266": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2160
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "267": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMP",
      "path": "12"
    },
    "268": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "269": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "271": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "272": {
      "op": "SWAP1"
    },
    "273": {
      "op": "DUP2"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "277": {
      "op": "ADD"
    },
    "278": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "279": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "281": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "282": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "DUP1",
      "path": "12"
    },
    "283": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "284": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "SUB",
      "path": "12"
    },
    "285": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "286": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "RETURN",
      "path": "12"
    },
    "287": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "288": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x156"
    },
    "291": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x12D"
    },
    "294": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "295": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "297": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6E2"
    },
    "300": {
      "fn": "CallerContract.getCustomerAuthorization",
      "jump": "i",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMP",
      "path": "12"
    },
    "301": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "308": {
      "op": "SHL"
    },
    "309": {
      "op": "SUB"
    },
    "310": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "AND",
      "path": "12",
      "statement": 1
    },
    "311": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2387,
        2391
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "313": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "314": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "DUP2",
      "path": "12"
    },
    "315": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "316": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2426
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "318": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "320": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "321": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "323": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "324": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "325": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "327": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "ADD",
      "path": "12"
    },
    "328": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "329": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH5",
      "path": "12",
      "value": "0x100000000"
    },
    "335": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "336": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "DIV",
      "path": "12"
    },
    "337": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "339": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "AND",
      "path": "12"
    },
    "340": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "341": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMP",
      "path": "12"
    },
    "342": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "343": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "345": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "346": {
      "op": "SWAP1"
    },
    "347": {
      "op": "ISZERO"
    },
    "348": {
      "op": "ISZERO"
    },
    "349": {
      "op": "DUP2"
    },
    "350": {
      "op": "MSTORE"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x116"
    },
    "357": {
      "op": "JUMP"
    },
    "358": {
      "op": "JUMPDEST"
    },
    "359": {
      "op": "PUSH2",
      "value": "0xE1"
    },
    "362": {
      "op": "PUSH2",
      "value": "0x310"
    },
    "365": {
      "jump": "i",
      "op": "JUMP"
    },
    "366": {
      "op": "JUMPDEST"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "369": {
      "op": "SLOAD"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "376": {
      "op": "SHL"
    },
    "377": {
      "op": "SUB"
    },
    "378": {
      "op": "AND"
    },
    "379": {
      "op": "JUMPDEST"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "382": {
      "op": "MLOAD"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "389": {
      "op": "SHL"
    },
    "390": {
      "op": "SUB"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "SWAP2"
    },
    "393": {
      "op": "AND"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "op": "PUSH2",
      "value": "0x116"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1932,
        2027
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "404": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        2007,
        2020
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 2,
      "value": "0x2"
    },
    "406": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        2007,
        2020
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "413": {
      "op": "SHL"
    },
    "414": {
      "op": "SUB"
    },
    "415": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        2007,
        2020
      ],
      "op": "AND",
      "path": "12"
    },
    "416": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1932,
        2027
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17B"
    },
    "419": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1932,
        2027
      ],
      "op": "JUMP",
      "path": "12"
    },
    "420": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "421": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D6"
    },
    "424": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1B2"
    },
    "427": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "428": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "430": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6E2"
    },
    "433": {
      "fn": "CallerContract.getCustomerDate",
      "jump": "i",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "434": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "441": {
      "op": "SHL"
    },
    "442": {
      "op": "SUB"
    },
    "443": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "AND",
      "path": "12",
      "statement": 3
    },
    "444": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2237,
        2243
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "446": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "447": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "DUP2",
      "path": "12"
    },
    "448": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "449": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2278
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "451": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "453": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "454": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "456": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "457": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "458": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "460": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "ADD",
      "path": "12"
    },
    "461": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "462": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "467": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "AND",
      "path": "12"
    },
    "468": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "469": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMP",
      "path": "12"
    },
    "470": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "471": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "473": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "474": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "479": {
      "op": "SWAP1"
    },
    "480": {
      "op": "SWAP2"
    },
    "481": {
      "op": "AND"
    },
    "482": {
      "op": "DUP2"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x116"
    },
    "490": {
      "op": "JUMP"
    },
    "491": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "492": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE1"
    },
    "495": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1F9"
    },
    "498": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "499": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "501": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x704"
    },
    "504": {
      "fn": "CallerContract.callback",
      "jump": "i",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMP",
      "path": "12"
    },
    "505": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "506": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x37B"
    },
    "509": {
      "fn": "CallerContract.callback",
      "jump": "i",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMP",
      "path": "12"
    },
    "510": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "511": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE1"
    },
    "514": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x20C"
    },
    "517": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "518": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "520": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x6E2"
    },
    "523": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "jump": "i",
      "offset": [
        673,
        919
      ],
      "op": "JUMP",
      "path": "12"
    },
    "524": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "525": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4C0"
    },
    "528": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "jump": "i",
      "offset": [
        673,
        919
      ],
      "op": "JUMP",
      "path": "12"
    },
    "529": {
      "op": "JUMPDEST"
    },
    "530": {
      "op": "PUSH2",
      "value": "0xE1"
    },
    "533": {
      "op": "PUSH2",
      "value": "0x21F"
    },
    "536": {
      "op": "CALLDATASIZE"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "539": {
      "op": "PUSH2",
      "value": "0x6E2"
    },
    "542": {
      "jump": "i",
      "op": "JUMP"
    },
    "543": {
      "op": "JUMPDEST"
    },
    "544": {
      "op": "PUSH2",
      "value": "0x587"
    },
    "547": {
      "jump": "i",
      "op": "JUMP"
    },
    "548": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "549": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1007
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "551": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1007
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "552": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "554": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "555": {
      "op": "PUSH4",
      "value": "0x4D1A687D"
    },
    "560": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "562": {
      "op": "SHL"
    },
    "563": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP2",
      "path": "12"
    },
    "564": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "op": "SUB"
    },
    "573": {
      "op": "DUP4"
    },
    "574": {
      "op": "DUP2"
    },
    "575": {
      "op": "AND"
    },
    "576": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "578": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP4",
      "path": "12"
    },
    "579": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ADD",
      "path": "12"
    },
    "580": {
      "op": "MSTORE"
    },
    "581": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        990
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "583": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        990
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "584": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1007
      ],
      "op": "AND",
      "path": "12"
    },
    "585": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1007
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "586": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1014
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4D1A687D"
    },
    "591": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1014
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "594": {
      "op": "ADD"
    },
    "595": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "597": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "599": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "600": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "12"
    },
    "601": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP4",
      "path": "12"
    },
    "602": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "SUB",
      "path": "12"
    },
    "603": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP2",
      "path": "12"
    },
    "604": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "606": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP8",
      "path": "12"
    },
    "607": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "12"
    },
    "608": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "609": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "610": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "12"
    },
    "611": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "612": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x26C"
    },
    "615": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "616": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "618": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "12"
    },
    "619": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "REVERT",
      "path": "12"
    },
    "620": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "621": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "12"
    },
    "622": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "GAS",
      "path": "12"
    },
    "623": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "CALL",
      "path": "12"
    },
    "624": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "625": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "12"
    },
    "626": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "627": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x280"
    },
    "630": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "631": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "632": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "634": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "12"
    },
    "635": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "636": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "637": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "639": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "REVERT",
      "path": "12"
    },
    "640": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "641": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "12"
    },
    "642": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "12"
    },
    "643": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "12"
    },
    "644": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "12"
    },
    "645": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "647": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "648": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "649": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "651": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "NOT",
      "path": "12"
    },
    "652": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "654": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP3",
      "path": "12"
    },
    "655": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ADD",
      "path": "12"
    },
    "656": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "AND",
      "path": "12"
    },
    "657": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP3",
      "path": "12"
    },
    "658": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ADD",
      "path": "12"
    },
    "659": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "12"
    },
    "660": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "662": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "663": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "12"
    },
    "664": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP2",
      "path": "12"
    },
    "665": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ADD",
      "path": "12"
    },
    "666": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "667": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A4"
    },
    "670": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "671": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "672": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x74F"
    },
    "675": {
      "fn": "CallerContract.updateKYC",
      "jump": "i",
      "offset": [
        993,
        1025
      ],
      "op": "JUMP",
      "path": "12"
    },
    "676": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "677": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 4,
      "value": "0x0"
    },
    "679": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "DUP2",
      "path": "12"
    },
    "680": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "DUP2",
      "path": "12"
    },
    "681": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "682": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1045
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "684": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "686": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "687": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "689": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "690": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "DUP2",
      "path": "12"
    },
    "691": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "692": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "693": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "DUP1",
      "path": "12"
    },
    "694": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "697": {
      "op": "NOT"
    },
    "698": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "AND",
      "path": "12"
    },
    "699": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1052,
        1056
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "701": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "OR",
      "path": "12"
    },
    "702": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "703": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "704": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "MLOAD",
      "path": "12",
      "statement": 5
    },
    "705": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        1025
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "706": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        1025
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "707": {
      "op": "POP"
    },
    "708": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x23F92AF5F59336C90C38C89410ACF21801E112289CF776FBE3DFA7F300DBFF7"
    },
    "741": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "742": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x304"
    },
    "745": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "746": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        1025
      ],
      "op": "DUP4",
      "path": "12"
    },
    "747": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        1025
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "748": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1102,
        1111
      ],
      "op": "DUP6",
      "path": "12"
    },
    "749": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1102,
        1111
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "750": {
      "op": "SWAP2"
    },
    "751": {
      "op": "DUP3"
    },
    "752": {
      "op": "MSTORE"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "759": {
      "op": "SHL"
    },
    "760": {
      "op": "SUB"
    },
    "761": {
      "op": "AND"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "764": {
      "op": "DUP3"
    },
    "765": {
      "op": "ADD"
    },
    "766": {
      "op": "MSTORE"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "769": {
      "op": "ADD"
    },
    "770": {
      "op": "SWAP1"
    },
    "771": {
      "op": "JUMP"
    },
    "772": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "773": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "775": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "776": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "DUP1",
      "path": "12"
    },
    "777": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "778": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SUB",
      "path": "12"
    },
    "779": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "780": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "LOG1",
      "path": "12"
    },
    "781": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        970,
        1119
      ],
      "op": "POP",
      "path": "12"
    },
    "782": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "POP",
      "path": "12"
    },
    "783": {
      "fn": "CallerContract.updateKYC",
      "jump": "o",
      "offset": [
        925,
        1119
      ],
      "op": "JUMP",
      "path": "12"
    },
    "784": {
      "op": "JUMPDEST"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "787": {
      "op": "SLOAD"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "SUB"
    },
    "796": {
      "op": "AND"
    },
    "797": {
      "op": "CALLER"
    },
    "798": {
      "op": "EQ"
    },
    "799": {
      "op": "PUSH2",
      "value": "0x36F"
    },
    "802": {
      "op": "JUMPI"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "805": {
      "op": "MLOAD"
    },
    "806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "DUP2"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "819": {
      "op": "DUP3"
    },
    "820": {
      "op": "ADD"
    },
    "821": {
      "op": "DUP2"
    },
    "822": {
      "op": "SWAP1"
    },
    "823": {
      "op": "MSTORE"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "826": {
      "op": "DUP3"
    },
    "827": {
      "op": "ADD"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "864": {
      "op": "DUP3"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "op": "JUMPDEST"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "873": {
      "op": "MLOAD"
    },
    "874": {
      "op": "DUP1"
    },
    "875": {
      "op": "SWAP2"
    },
    "876": {
      "op": "SUB"
    },
    "877": {
      "op": "SWAP1"
    },
    "878": {
      "op": "REVERT"
    },
    "879": {
      "op": "JUMPDEST"
    },
    "880": {
      "op": "PUSH2",
      "value": "0x379"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "885": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "888": {
      "jump": "i",
      "op": "JUMP"
    },
    "889": {
      "op": "JUMPDEST"
    },
    "890": {
      "jump": "o",
      "op": "JUMP"
    },
    "891": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "892": {
      "offset": [
        1633,
        1646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "894": {
      "fn": "CallerContract.callback",
      "offset": [
        1633,
        1646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "901": {
      "op": "SHL"
    },
    "902": {
      "op": "SUB"
    },
    "903": {
      "offset": [
        1633,
        1646
      ],
      "op": "AND",
      "path": "12"
    },
    "904": {
      "offset": [
        1619,
        1629
      ],
      "op": "CALLER",
      "path": "12"
    },
    "905": {
      "offset": [
        1619,
        1646
      ],
      "op": "EQ",
      "path": "12"
    },
    "906": {
      "offset": [
        1611,
        1647
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x392"
    },
    "909": {
      "offset": [
        1611,
        1647
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "910": {
      "fn": "CallerContract.callback",
      "offset": [
        1611,
        1647
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "912": {
      "fn": "CallerContract.callback",
      "offset": [
        1611,
        1647
      ],
      "op": "DUP1",
      "path": "12"
    },
    "913": {
      "fn": "CallerContract.callback",
      "offset": [
        1611,
        1647
      ],
      "op": "REVERT",
      "path": "12"
    },
    "914": {
      "fn": "CallerContract.callback",
      "offset": [
        1611,
        1647
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "915": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 6,
      "value": "0x0"
    },
    "917": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "DUP2",
      "path": "12"
    },
    "918": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "DUP2",
      "path": "12"
    },
    "919": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "920": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1255
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "922": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "924": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "925": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "927": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "928": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "929": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "930": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xFF"
    },
    "932": {
      "branch": 16,
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "AND",
      "path": "12"
    },
    "933": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3AD"
    },
    "936": {
      "branch": 16,
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "937": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "939": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "DUP1",
      "path": "12"
    },
    "940": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "REVERT",
      "path": "12"
    },
    "941": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "942": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1276
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 7,
      "value": "0x0"
    },
    "944": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "DUP1",
      "path": "12"
    },
    "945": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "946": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "979": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "AND",
      "path": "12"
    },
    "980": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "PUSH21",
      "path": "12",
      "value": "0x10000000000000000000000000000000000000000"
    },
    "1002": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1003": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1004": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1005": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1006": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1007": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "MUL",
      "path": "12"
    },
    "1008": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1009": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1010": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1011": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "OR",
      "path": "12"
    },
    "1012": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1013": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "op": "SUB"
    },
    "1022": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 8
    },
    "1023": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "AND",
      "path": "12"
    },
    "1024": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1025": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1026": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1311
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1028": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1030": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1031": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1033": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1034": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1035": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1036": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1346
      ],
      "op": "DUP6",
      "path": "12"
    },
    "1037": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1346
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1038": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1346
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1041": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1396
      ],
      "op": "ADD",
      "path": "12",
      "statement": 9
    },
    "1042": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1043": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1044": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "1050": {
      "op": "NOT"
    },
    "1051": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "AND",
      "path": "12"
    },
    "1052": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "PUSH5",
      "path": "12",
      "value": "0x100000000"
    },
    "1058": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1059": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1060": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "MUL",
      "path": "12"
    },
    "1061": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1062": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1063": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1064": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "OR",
      "path": "12"
    },
    "1065": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1066": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1067": {
      "fn": "CallerContract.callback",
      "offset": [
        1464,
        1490
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 10,
      "value": "0x438"
    },
    "1070": {
      "fn": "CallerContract.callback",
      "offset": [
        1464,
        1479
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "1071": {
      "fn": "CallerContract.callback",
      "offset": [
        1482,
        1490
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x1DFE200"
    },
    "1076": {
      "fn": "CallerContract.callback",
      "offset": [
        1464,
        1490
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x768"
    },
    "1079": {
      "fn": "CallerContract.callback",
      "jump": "i",
      "offset": [
        1464,
        1490
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1080": {
      "fn": "CallerContract.callback",
      "offset": [
        1464,
        1490
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1087": {
      "op": "SHL"
    },
    "1088": {
      "op": "SUB"
    },
    "1089": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1090": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "AND",
      "path": "12"
    },
    "1091": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1093": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1094": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1095": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1096": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1431
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1098": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "1100": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1101": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1102": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1103": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1105": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1106": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1107": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1108": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1454
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "1110": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1454
      ],
      "op": "ADD",
      "path": "12"
    },
    "1111": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1112": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1113": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1118": {
      "op": "NOT"
    },
    "1119": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "AND",
      "path": "12"
    },
    "1120": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "1125": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1126": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1127": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP6",
      "path": "12"
    },
    "1128": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "AND",
      "path": "12"
    },
    "1129": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1130": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1131": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "1132": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "OR",
      "path": "12"
    },
    "1133": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1134": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "1135": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1136": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 11
    },
    "1137": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1138": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1139": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1518
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x3"
    },
    "1141": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1142": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "1143": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1144": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1145": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1146": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "1147": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1148": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1151": {
      "op": "NOT"
    },
    "1152": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "AND",
      "path": "12"
    },
    "1153": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1154": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1155": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 12
    },
    "1156": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1157": {
      "op": "DUP6"
    },
    "1158": {
      "op": "ISZERO"
    },
    "1159": {
      "op": "ISZERO"
    },
    "1160": {
      "op": "DUP2"
    },
    "1161": {
      "op": "MSTORE"
    },
    "1162": {
      "op": "SWAP1"
    },
    "1163": {
      "op": "DUP2"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "DUP4"
    },
    "1166": {
      "op": "SWAP1"
    },
    "1167": {
      "op": "MSTORE"
    },
    "1168": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0xBF59B978135D33813EE8E3DED58396D9328C70D082D236F1BF1DB922A392C4AA"
    },
    "1201": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1202": {
      "op": "ADD"
    },
    "1203": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1205": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1206": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1207": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1208": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "SUB",
      "path": "12"
    },
    "1209": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1210": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "LOG1",
      "path": "12"
    },
    "1211": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "POP",
      "path": "12"
    },
    "1212": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "POP",
      "path": "12"
    },
    "1213": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "POP",
      "path": "12"
    },
    "1214": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "POP",
      "path": "12"
    },
    "1215": {
      "fn": "CallerContract.callback",
      "jump": "o",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1216": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1219": {
      "op": "SLOAD"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1226": {
      "op": "SHL"
    },
    "1227": {
      "op": "SUB"
    },
    "1228": {
      "op": "AND"
    },
    "1229": {
      "op": "CALLER"
    },
    "1230": {
      "op": "EQ"
    },
    "1231": {
      "op": "PUSH2",
      "value": "0x51A"
    },
    "1234": {
      "op": "JUMPI"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1237": {
      "op": "MLOAD"
    },
    "1238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "DUP2"
    },
    "1246": {
      "op": "MSTORE"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1251": {
      "op": "DUP3"
    },
    "1252": {
      "op": "ADD"
    },
    "1253": {
      "op": "DUP2"
    },
    "1254": {
      "op": "SWAP1"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1258": {
      "op": "DUP3"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1296": {
      "op": "DUP3"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "op": "MSTORE"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "op": "PUSH2",
      "value": "0x366"
    },
    "1305": {
      "op": "JUMP"
    },
    "1306": {
      "op": "JUMPDEST"
    },
    "1307": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        779
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 13,
      "value": "0x2"
    },
    "1309": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1310": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "DUP4",
      "path": "12"
    },
    "1320": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "AND",
      "path": "12"
    },
    "1321": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1342": {
      "op": "NOT"
    },
    "1343": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1344": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1345": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "AND",
      "path": "12"
    },
    "1346": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "DUP2",
      "path": "12"
    },
    "1347": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "OR",
      "path": "12"
    },
    "1348": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1349": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "1350": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 14
    },
    "1354": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "1355": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1356": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1357": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "AND",
      "path": "12"
    },
    "1358": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "DUP3",
      "path": "12"
    },
    "1359": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "OR",
      "path": "12"
    },
    "1360": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1361": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "1362": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 15,
      "value": "0x40"
    },
    "1364": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1365": {
      "op": "SWAP1"
    },
    "1366": {
      "op": "DUP2"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x441E3B056B114797955165BD03BB8393FC1658A713F09225DE4745A8D068BF7D"
    },
    "1401": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1404": {
      "op": "ADD"
    },
    "1405": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "1407": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "1408": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1409": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "1410": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "SUB",
      "path": "12"
    },
    "1411": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1412": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "LOG1",
      "path": "12"
    },
    "1413": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "POP",
      "path": "12"
    },
    "1414": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "jump": "o",
      "offset": [
        673,
        919
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1415": {
      "op": "JUMPDEST"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1418": {
      "op": "SLOAD"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "op": "SUB"
    },
    "1427": {
      "op": "AND"
    },
    "1428": {
      "op": "CALLER"
    },
    "1429": {
      "op": "EQ"
    },
    "1430": {
      "op": "PUSH2",
      "value": "0x5E1"
    },
    "1433": {
      "op": "JUMPI"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1436": {
      "op": "MLOAD"
    },
    "1437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "op": "DUP2"
    },
    "1445": {
      "op": "MSTORE"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1450": {
      "op": "DUP3"
    },
    "1451": {
      "op": "ADD"
    },
    "1452": {
      "op": "DUP2"
    },
    "1453": {
      "op": "SWAP1"
    },
    "1454": {
      "op": "MSTORE"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1457": {
      "op": "DUP3"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "MSTORE"
    },
    "1460": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1495": {
      "op": "DUP3"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "op": "MSTORE"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1500": {
      "op": "ADD"
    },
    "1501": {
      "op": "PUSH2",
      "value": "0x366"
    },
    "1504": {
      "op": "JUMP"
    },
    "1505": {
      "op": "JUMPDEST"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "SUB"
    },
    "1514": {
      "op": "DUP2"
    },
    "1515": {
      "op": "AND"
    },
    "1516": {
      "op": "PUSH2",
      "value": "0x65D"
    },
    "1519": {
      "op": "JUMPI"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1522": {
      "op": "MLOAD"
    },
    "1523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1529": {
      "op": "SHL"
    },
    "1530": {
      "op": "DUP2"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "ADD"
    },
    "1538": {
      "op": "MSTORE"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1543": {
      "op": "DUP3"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "op": "MSTORE"
    },
    "1546": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1581": {
      "op": "DUP3"
    },
    "1582": {
      "op": "ADD"
    },
    "1583": {
      "op": "MSTORE"
    },
    "1584": {
      "op": "PUSH32",
      "value": "0x6464726573730000000000000000000000000000000000000000000000000000"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1619": {
      "op": "DUP3"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "MSTORE"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "PUSH2",
      "value": "0x366"
    },
    "1628": {
      "op": "JUMP"
    },
    "1629": {
      "op": "JUMPDEST"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x666"
    },
    "1633": {
      "op": "DUP2"
    },
    "1634": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "1637": {
      "jump": "i",
      "op": "JUMP"
    },
    "1638": {
      "op": "JUMPDEST"
    },
    "1639": {
      "op": "POP"
    },
    "1640": {
      "jump": "o",
      "op": "JUMP"
    },
    "1641": {
      "op": "JUMPDEST"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1644": {
      "op": "DUP1"
    },
    "1645": {
      "op": "SLOAD"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "op": "SUB"
    },
    "1654": {
      "op": "DUP4"
    },
    "1655": {
      "op": "DUP2"
    },
    "1656": {
      "op": "AND"
    },
    "1657": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1678": {
      "op": "NOT"
    },
    "1679": {
      "op": "DUP4"
    },
    "1680": {
      "op": "AND"
    },
    "1681": {
      "op": "DUP2"
    },
    "1682": {
      "op": "OR"
    },
    "1683": {
      "op": "DUP5"
    },
    "1684": {
      "op": "SSTORE"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1687": {
      "op": "MLOAD"
    },
    "1688": {
      "op": "SWAP2"
    },
    "1689": {
      "op": "SWAP1"
    },
    "1690": {
      "op": "SWAP3"
    },
    "1691": {
      "op": "AND"
    },
    "1692": {
      "op": "SWAP3"
    },
    "1693": {
      "op": "DUP4"
    },
    "1694": {
      "op": "SWAP2"
    },
    "1695": {
      "op": "PUSH32",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1728": {
      "op": "SWAP2"
    },
    "1729": {
      "op": "SWAP1"
    },
    "1730": {
      "op": "LOG3"
    },
    "1731": {
      "op": "POP"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "jump": "o",
      "op": "JUMP"
    },
    "1734": {
      "op": "JUMPDEST"
    },
    "1735": {
      "op": "DUP1"
    },
    "1736": {
      "op": "CALLDATALOAD"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1743": {
      "op": "SHL"
    },
    "1744": {
      "op": "SUB"
    },
    "1745": {
      "op": "DUP2"
    },
    "1746": {
      "op": "AND"
    },
    "1747": {
      "op": "DUP2"
    },
    "1748": {
      "op": "EQ"
    },
    "1749": {
      "op": "PUSH2",
      "value": "0x6DD"
    },
    "1752": {
      "op": "JUMPI"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1755": {
      "op": "DUP1"
    },
    "1756": {
      "op": "REVERT"
    },
    "1757": {
      "op": "JUMPDEST"
    },
    "1758": {
      "op": "SWAP2"
    },
    "1759": {
      "op": "SWAP1"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "jump": "o",
      "op": "JUMP"
    },
    "1762": {
      "op": "JUMPDEST"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1767": {
      "op": "DUP3"
    },
    "1768": {
      "op": "DUP5"
    },
    "1769": {
      "op": "SUB"
    },
    "1770": {
      "op": "SLT"
    },
    "1771": {
      "op": "ISZERO"
    },
    "1772": {
      "op": "PUSH2",
      "value": "0x6F4"
    },
    "1775": {
      "op": "JUMPI"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1778": {
      "op": "DUP1"
    },
    "1779": {
      "op": "REVERT"
    },
    "1780": {
      "op": "JUMPDEST"
    },
    "1781": {
      "op": "PUSH2",
      "value": "0x6FD"
    },
    "1784": {
      "op": "DUP3"
    },
    "1785": {
      "op": "PUSH2",
      "value": "0x6C6"
    },
    "1788": {
      "jump": "i",
      "op": "JUMP"
    },
    "1789": {
      "op": "JUMPDEST"
    },
    "1790": {
      "op": "SWAP4"
    },
    "1791": {
      "op": "SWAP3"
    },
    "1792": {
      "op": "POP"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "jump": "o",
      "op": "JUMP"
    },
    "1796": {
      "op": "JUMPDEST"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1799": {
      "op": "DUP1"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1802": {
      "op": "DUP1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1805": {
      "op": "DUP6"
    },
    "1806": {
      "op": "DUP8"
    },
    "1807": {
      "op": "SUB"
    },
    "1808": {
      "op": "SLT"
    },
    "1809": {
      "op": "ISZERO"
    },
    "1810": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "1813": {
      "op": "JUMPI"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1816": {
      "op": "DUP1"
    },
    "1817": {
      "op": "REVERT"
    },
    "1818": {
      "op": "JUMPDEST"
    },
    "1819": {
      "op": "DUP5"
    },
    "1820": {
      "op": "CALLDATALOAD"
    },
    "1821": {
      "op": "SWAP4"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1825": {
      "op": "DUP6"
    },
    "1826": {
      "op": "ADD"
    },
    "1827": {
      "op": "CALLDATALOAD"
    },
    "1828": {
      "op": "DUP1"
    },
    "1829": {
      "op": "ISZERO"
    },
    "1830": {
      "op": "ISZERO"
    },
    "1831": {
      "op": "DUP2"
    },
    "1832": {
      "op": "EQ"
    },
    "1833": {
      "op": "PUSH2",
      "value": "0x731"
    },
    "1836": {
      "op": "JUMPI"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1839": {
      "op": "DUP1"
    },
    "1840": {
      "op": "REVERT"
    },
    "1841": {
      "op": "JUMPDEST"
    },
    "1842": {
      "op": "SWAP3"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "op": "PUSH2",
      "value": "0x73F"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1849": {
      "op": "DUP7"
    },
    "1850": {
      "op": "ADD"
    },
    "1851": {
      "op": "PUSH2",
      "value": "0x6C6"
    },
    "1854": {
      "jump": "i",
      "op": "JUMP"
    },
    "1855": {
      "op": "JUMPDEST"
    },
    "1856": {
      "op": "SWAP4"
    },
    "1857": {
      "op": "SWAP7"
    },
    "1858": {
      "op": "SWAP3"
    },
    "1859": {
      "op": "SWAP6"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "op": "SWAP3"
    },
    "1862": {
      "op": "SWAP4"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1865": {
      "op": "ADD"
    },
    "1866": {
      "op": "CALLDATALOAD"
    },
    "1867": {
      "op": "SWAP3"
    },
    "1868": {
      "op": "POP"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "jump": "o",
      "op": "JUMP"
    },
    "1871": {
      "op": "JUMPDEST"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1876": {
      "op": "DUP3"
    },
    "1877": {
      "op": "DUP5"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "op": "SLT"
    },
    "1880": {
      "op": "ISZERO"
    },
    "1881": {
      "op": "PUSH2",
      "value": "0x761"
    },
    "1884": {
      "op": "JUMPI"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1887": {
      "op": "DUP1"
    },
    "1888": {
      "op": "REVERT"
    },
    "1889": {
      "op": "JUMPDEST"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "op": "MLOAD"
    },
    "1892": {
      "op": "SWAP2"
    },
    "1893": {
      "op": "SWAP1"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "jump": "o",
      "op": "JUMP"
    },
    "1896": {
      "op": "JUMPDEST"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1899": {
      "op": "DUP3"
    },
    "1900": {
      "op": "NOT"
    },
    "1901": {
      "op": "DUP3"
    },
    "1902": {
      "op": "GT"
    },
    "1903": {
      "op": "ISZERO"
    },
    "1904": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "1907": {
      "op": "JUMPI"
    },
    "1908": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1918": {
      "op": "MSTORE"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1923": {
      "op": "MSTORE"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1928": {
      "op": "REVERT"
    },
    "1929": {
      "op": "JUMPDEST"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "op": "ADD"
    },
    "1932": {
      "op": "SWAP1"
    },
    "1933": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "86b8a229978ab176c4ee1a71849c1ef3e184eb80",
  "source": "pragma solidity ^0.8.0;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol\";\nimport \"./OracleInterface.sol\";\n\ncontract CallerContract is Ownable {\n\n    bool private isKYC = false;\n    OracleInterface private oracleInstance;\n    address private oracleAddress;\n    mapping(uint256=>bool) myRequests;\n\n    struct customer {\n        uint256 customerId;\n        uint32 expireyDate;\n        bool isAuthorized;\n    }\n\n    mapping (address => customer) customerRegistry;\n\n\n    event newOracleAddressEvent(address oracleAddress);\n    event ReceivedNewRequestIdEvent(uint256 id, address customer);\n    event KYCUpdatedEvent(bool isKYC, uint256 id);\n\n    function setOracleInstanceAddress(address _oracleInstanceAddress) public onlyOwner {\n        oracleAddress = _oracleInstanceAddress;\n        oracleInstance = OracleInterface(oracleAddress);\n        emit newOracleAddressEvent(oracleAddress);\n    }\n\n    function updateKYC(address _customer) public {\n        uint256 id = oracleInstance.getKYC(_customer);\n        myRequests[id] = true; \n        emit ReceivedNewRequestIdEvent(id, _customer);\n    }\n\n    function callback(uint256 _customerId, bool _isKYC, address _customer, uint256 _id) public onlyOracle {\n        require(myRequests[_id]);\n        isKYC = _isKYC;\n        customerRegistry[_customer].customerId= _customerId;\n        customerRegistry[_customer].isAuthorized = _isKYC;\n        customerRegistry[_customer].expireyDate = uint32(block.timestamp + 52 weeks);\n        delete myRequests[_id];\n        emit KYCUpdatedEvent(_isKYC, _id);\n    }\n\n    modifier onlyOracle() {\n        require(msg.sender == oracleAddress);\n        _;\n    }\n    function _isAuthorized(address _customer) internal view returns (bool) {\n        return customerRegistry[_customer].isAuthorized;\n    }\n\n    function isAuthorized(address _customer) public view returns(bool) {\n        return _isAuthorized(_customer);\n    }\n\n    function getOracleAddress() public view returns (address) {\n        return oracleAddress;\n    }\n\n    function getCustomerId(address _customer) public view returns (uint256) {\n        return customerRegistry[_customer].customerId;\n    }\n    function getCustomerDate(address _customer) public view returns (uint32) {\n        return customerRegistry[_customer].expireyDate;\n    }\n    function getCustomerAuthorization(address _customer) public view returns (bool) {\n        return customerRegistry[_customer].isAuthorized;\n    }\n}",
  "sourceMap": "139:2320:12:-:0;;;202:5;181:26;;-1:-1:-1;;;;181:26:12;;;139:2320;;;;;;;;;-1:-1:-1;867:23:0;666:10:3;867:9:0;:23::i;:::-;139:2320:12;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;139:2320:12:-;;;;;;;",
  "sourcePath": "contracts/Oracle/Caller.sol",
  "type": "contract"
}