{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isKYC",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "KYCUpdatedEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "customer",
          "type": "address"
        }
      ],
      "name": "ReceivedNewRequestIdEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "name": "newOracleAddressEvent",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_customerId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isKYC",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerAuthorization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerDate",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getKYC",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracleInstanceAddress",
          "type": "address"
        }
      ],
      "name": "setOracleInstanceAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "updateKYC",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/b.hamm/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/GSN/Context.sol",
    "10": "contracts/OracleInterface.sol",
    "3": "/Users/b.hamm/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/ownership/Ownable.sol",
    "5": "contracts/Caller.sol"
  },
  "ast": {
    "absolutePath": "contracts/Caller.sol",
    "exportedSymbols": {
      "CallerContract": [
        240
      ]
    },
    "id": 241,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/Users/b.hamm/.brownie/packages/OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/ownership/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/ownership/Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 241,
        "sourceUnit": 3025,
        "src": "25:83:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OracleInterface.sol",
        "file": "./OracleInterface.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 241,
        "sourceUnit": 3035,
        "src": "109:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3024,
              "src": "169:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3024",
                "typeString": "contract Ownable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "169:7:5"
          }
        ],
        "contractDependencies": [
          3024,
          3736
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 240,
        "linearizedBaseContracts": [
          240,
          3024,
          3736
        ],
        "name": "CallerContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "isKYC",
            "nodeType": "VariableDeclaration",
            "scope": 240,
            "src": "184:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "184:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "205:5:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10,
            "name": "oracleInstance",
            "nodeType": "VariableDeclaration",
            "scope": 240,
            "src": "216:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OracleInterface_$3034",
              "typeString": "contract OracleInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 9,
              "name": "OracleInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3034,
              "src": "216:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$3034",
                "typeString": "contract OracleInterface"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12,
            "name": "oracleAddress",
            "nodeType": "VariableDeclaration",
            "scope": 240,
            "src": "260:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "260:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16,
            "name": "myRequests",
            "nodeType": "VariableDeclaration",
            "scope": 240,
            "src": "295:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "303:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "295:22:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 14,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "312:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "CallerContract.customer",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 18,
                "name": "customerId",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "361:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "361:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "expireyDate",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "389:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "389:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "name": "isAuthorized",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "417:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 21,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "417:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "customer",
            "nodeType": "StructDefinition",
            "scope": 240,
            "src": "335:106:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 27,
            "name": "customerRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 240,
            "src": "447:46:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
              "typeString": "mapping(address => struct CallerContract.customer)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "456:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "447:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
                "typeString": "mapping(address => struct CallerContract.customer)"
              },
              "valueType": {
                "contractScope": null,
                "id": 25,
                "name": "customer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 23,
                "src": "467:8:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_customer_$23_storage_ptr",
                  "typeString": "struct CallerContract.customer"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 31,
            "name": "newOracleAddressEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "oracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "529:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "528:23:5"
            },
            "src": "501:51:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37,
            "name": "ReceivedNewRequestIdEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "589:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "name": "customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "601:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "588:30:5"
            },
            "src": "557:62:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 43,
            "name": "KYCUpdatedEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "name": "isKYC",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "646:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "658:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "645:24:5"
            },
            "src": "624:46:5"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "759:163:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "oracleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "769:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "_oracleInstanceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "785:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "769:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "769:38:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 54,
                      "name": "oracleInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "817:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$3034",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "850:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 55,
                        "name": "OracleInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3034,
                        "src": "834:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleInterface_$3034_$",
                          "typeString": "type(contract OracleInterface)"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "834:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$3034",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "src": "817:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleInterface_$3034",
                      "typeString": "contract OracleInterface"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "817:47:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "oracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "901:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 60,
                      "name": "newOracleAddressEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "879:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "879:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "EmitStatement",
                  "src": "874:41:5"
                }
              ]
            },
            "documentation": null,
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 48,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 47,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2957,
                  "src": "749:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "749:9:5"
              }
            ],
            "name": "setOracleInstanceAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "name": "_oracleInstanceAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "710:30:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "709:32:5"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "759:0:5"
            },
            "scope": 240,
            "src": "676:246:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "973:149:5",
              "statements": [
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "983:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "983:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 74,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1018:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "oracleInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "996:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$3034",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getKYC",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3033,
                      "src": "996:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "983:45:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "myRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1038:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1049:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1038:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1055:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1038:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:21:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1101:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1105:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 83,
                      "name": "ReceivedNewRequestIdEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1075:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1075:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "EmitStatement",
                  "src": "1070:45:5"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateKYC",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "_customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "947:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "946:19:5"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:0:5"
            },
            "scope": 240,
            "src": "928:194:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "1230:334:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 103,
                          "name": "myRequests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "1248:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 105,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 104,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1259:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1248:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3835,
                        3836
                      ],
                      "referencedDeclaration": 3835,
                      "src": "1240:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:24:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 108,
                      "name": "isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1274:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "_isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1282:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1274:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:14:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1298:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 114,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1315:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1298:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$23_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "customerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "1298:38:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 116,
                      "name": "_customerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1338:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1298:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 119,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1359:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 121,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1376:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1359:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$23_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isAuthorized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "1359:40:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "_isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1402:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1359:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 126,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1418:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 128,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 127,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1435:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1418:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$23_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expireyDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "1418:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 131,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3834,
                            "src": "1467:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3532",
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1473:8:5",
                            "subdenomination": "weeks",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31449600_by_1",
                              "typeString": "int_const 31449600"
                            },
                            "value": "52"
                          },
                          "src": "1467:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1460:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": "uint32"
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1460:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1418:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1492:22:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 137,
                        "name": "myRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1499:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 139,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1510:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1499:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:22:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 143,
                        "name": "_isKYC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "1545:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1553:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 142,
                      "name": "KYCUpdatedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1529:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1529:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "EmitStatement",
                  "src": "1524:33:5"
                }
              ]
            },
            "documentation": null,
            "id": 148,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 100,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 99,
                  "name": "onlyOracle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 159,
                  "src": "1219:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1219:10:5"
              }
            ],
            "name": "callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "name": "_customerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "1146:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "name": "_isKYC",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "1167:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "name": "_customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "1180:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "1199:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1145:66:5"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1230:0:5"
            },
            "scope": 240,
            "src": "1128:436:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1592:64:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 151,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3832,
                            "src": "1610:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1610:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 153,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1624:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1610:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3835,
                        3836
                      ],
                      "referencedDeclaration": 3835,
                      "src": "1602:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1602:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:36:5"
                },
                {
                  "id": 157,
                  "nodeType": "PlaceholderStatement",
                  "src": "1648:1:5"
                }
              ]
            },
            "documentation": null,
            "id": 159,
            "name": "onlyOracle",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:2:5"
            },
            "src": "1570:86:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "1732:64:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1749:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 168,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 167,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "1766:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1749:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$23_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isAuthorized",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22,
                    "src": "1749:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 170,
                  "nodeType": "Return",
                  "src": "1742:47:5"
                }
              ]
            },
            "documentation": null,
            "id": 172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "_customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "1684:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1683:19:5"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "1726:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1725:6:5"
            },
            "scope": 240,
            "src": "1661:135:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1869:48:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "1900:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 179,
                      "name": "_isAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "1886:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1886:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 178,
                  "id": 182,
                  "nodeType": "Return",
                  "src": "1879:31:5"
                }
              ]
            },
            "documentation": null,
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorized",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "name": "_customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1824:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1824:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1823:19:5"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1863:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1863:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1862:6:5"
            },
            "scope": 240,
            "src": "1802:115:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 191,
              "nodeType": "Block",
              "src": "1981:37:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 189,
                    "name": "oracleAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12,
                    "src": "1998:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 188,
                  "id": 190,
                  "nodeType": "Return",
                  "src": "1991:20:5"
                }
              ]
            },
            "documentation": null,
            "id": 192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracleAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1948:2:5"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "1972:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1971:9:5"
            },
            "scope": 240,
            "src": "1923:95:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2069:29:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "name": "isKYC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "2086:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 196,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "2079:12:5"
                }
              ]
            },
            "documentation": null,
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getKYC",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2039:2:5"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2063:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2062:6:5"
            },
            "scope": 240,
            "src": "2024:74:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "2176:62:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2193:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 209,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 208,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2210:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2193:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$23_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "customerId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18,
                    "src": "2193:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 206,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "2186:45:5"
                }
              ]
            },
            "documentation": null,
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "_customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "2127:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2126:19:5"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "2167:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2166:9:5"
            },
            "scope": 240,
            "src": "2104:134:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "2316:63:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2333:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 222,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "2350:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2333:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$23_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "expireyDate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20,
                    "src": "2333:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 219,
                  "id": 224,
                  "nodeType": "Return",
                  "src": "2326:46:5"
                }
              ]
            },
            "documentation": null,
            "id": 226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerDate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "name": "_customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "2268:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2267:19:5"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "2308:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2307:8:5"
            },
            "scope": 240,
            "src": "2243:136:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "2464:64:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 233,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2481:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$23_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2498:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2481:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$23_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isAuthorized",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22,
                    "src": "2481:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 232,
                  "id": 237,
                  "nodeType": "Return",
                  "src": "2474:47:5"
                }
              ]
            },
            "documentation": null,
            "id": 239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerAuthorization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "_customer",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "2418:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2417:19:5"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "2458:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2457:6:5"
            },
            "scope": 240,
            "src": "2384:144:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 241,
        "src": "142:2388:5"
      }
    ],
    "src": "0:2530:5"
  },
  "bytecode": "60806040526000805460ff60a01b191681556100226001600160e01b0361007116565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610075565b3390565b6107f6806100846000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b18b78dd1161008c578063ddef9ac011610066578063ddef9ac0146101f1578063e9e17a9e1461022b578063f2fde38b14610251578063fe9fbb8014610277576100cf565b8063b18b78dd146101a2578063c944d2ca146101aa578063d1d3c97c146101e9576100cf565b80630272ee97146100d45780633a521b87146100fc578063650314d614610134578063715018a61461016e5780638da5cb5b146101765780638f32d59b1461019a575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b031661029d565b005b6101226004803603602081101561011257600080fd5b50356001600160a01b0316610382565b60408051918252519081900360200190f35b61015a6004803603602081101561014a57600080fd5b50356001600160a01b031661039d565b604080519115158252519081900360200190f35b6100fa6103c6565b61017e610469565b604080516001600160a01b039092168252519081900360200190f35b61015a610478565b61017e61049c565b6101d0600480360360208110156101c057600080fd5b50356001600160a01b03166104ab565b6040805163ffffffff9092168252519081900360200190f35b61015a6104cf565b6100fa6004803603608081101561020757600080fd5b5080359060208101351515906001600160a01b0360408201351690606001356104df565b6100fa6004803603602081101561024157600080fd5b50356001600160a01b03166105c5565b6100fa6004803603602081101561026757600080fd5b50356001600160a01b0316610681565b61015a6004803603602081101561028d57600080fd5b50356001600160a01b03166106e6565b60015460408051634d1a687d60e01b81526001600160a01b03848116600483015291516000939290921691634d1a687d9160248082019260209290919082900301818787803b1580156102ef57600080fd5b505af1158015610303573d6000803e3d6000fd5b505050506040513d602081101561031957600080fd5b5051600081815260036020908152604091829020805460ff1916600117905581518381526001600160a01b0386169181019190915281519293507f023f92af5f59336c90c38c89410acf21801e112289cf776fbe3dfa7f300dbff7929081900390910190a15050565b6001600160a01b031660009081526004602052604090205490565b6001600160a01b0316600090815260046020526040902060010154640100000000900460ff1690565b6103ce610478565b61041f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b031661048d6106f7565b6001600160a01b031614905090565b6002546001600160a01b031690565b6001600160a01b031660009081526004602052604090206001015463ffffffff1690565b600054600160a01b900460ff1690565b6002546001600160a01b031633146104f657600080fd5b60008181526003602052604090205460ff1661051157600080fd5b6000805460ff60a01b1916600160a01b8515159081029190911782556001600160a01b0384168252600460209081526040808420888155600101805464ff00000000191664010000000085021763ffffffff1916426301dfe2000163ffffffff161790558484526003825292839020805460ff191690558251918252810183905281517fbf59b978135d33813ee8e3ded58396d9328c70d082d236f1bf1db922a392c4aa929181900390910190a150505050565b6105cd610478565b61061e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280546001600160a01b038084166001600160a01b03199283161792839055600180549092169216918217905560408051918252517f441e3b056b114797955165bd03bb8393fc1658a713f09225de4745a8d068bf7d9181900360200190a150565b610689610478565b6106da576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106e3816106fb565b50565b60006106f18261039d565b92915050565b3390565b6001600160a01b0381166107405760405162461bcd60e51b815260040180806020018281038252602681526020018061079c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a723158206f3127fa574e79d244cf4e19ba65b39463de3e9a3dedc95de6e6f58833826e0364736f6c63430005110032",
  "bytecodeSha1": "621cdcdc4dfdd87bbf90da1bdf9e1b5191317e96",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "CallerContract",
  "coverageMap": {
    "branches": {
      "0": {},
      "10": {},
      "3": {
        "Ownable._transferOwnership": {
          "29": [
            2251,
            2273,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "28": [
            1103,
            1112,
            true
          ]
        }
      },
      "5": {
        "CallerContract.callback": {
          "27": [
            1248,
            1263,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "23": [
            860,
            877
          ]
        }
      },
      "10": {},
      "3": {
        "Ownable._transferOwnership": {
          "24": [
            2243,
            2316
          ],
          "25": [
            2326,
            2369
          ],
          "26": [
            2379,
            2396
          ]
        },
        "Ownable.isOwner": {
          "7": [
            1306,
            1335
          ]
        },
        "Ownable.owner": {
          "6": [
            956,
            969
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1740,
            1785
          ],
          "5": [
            1795,
            1814
          ]
        },
        "Ownable.transferOwnership": {
          "21": [
            2042,
            2070
          ]
        }
      },
      "5": {
        "CallerContract.callback": {
          "11": [
            1240,
            1264
          ],
          "12": [
            1274,
            1288
          ],
          "13": [
            1298,
            1349
          ],
          "14": [
            1359,
            1408
          ],
          "15": [
            1418,
            1482
          ],
          "16": [
            1492,
            1514
          ],
          "17": [
            1524,
            1557
          ]
        },
        "CallerContract.getCustomerAuthorization": {
          "3": [
            2474,
            2521
          ]
        },
        "CallerContract.getCustomerDate": {
          "9": [
            2326,
            2372
          ]
        },
        "CallerContract.getCustomerId": {
          "2": [
            2186,
            2231
          ]
        },
        "CallerContract.getKYC": {
          "10": [
            2079,
            2091
          ]
        },
        "CallerContract.getOracleAddress": {
          "8": [
            1991,
            2011
          ]
        },
        "CallerContract.isAuthorized": {
          "22": [
            1879,
            1910
          ]
        },
        "CallerContract.setOracleInstanceAddress": {
          "18": [
            769,
            807
          ],
          "19": [
            817,
            864
          ],
          "20": [
            874,
            915
          ]
        },
        "CallerContract.updateKYC": {
          "0": [
            1038,
            1059
          ],
          "1": [
            1070,
            1115
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Context",
    "OracleInterface",
    "OpenZeppelin/openzeppelin-contracts@2.5.1/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b18b78dd1161008c578063ddef9ac011610066578063ddef9ac0146101f1578063e9e17a9e1461022b578063f2fde38b14610251578063fe9fbb8014610277576100cf565b8063b18b78dd146101a2578063c944d2ca146101aa578063d1d3c97c146101e9576100cf565b80630272ee97146100d45780633a521b87146100fc578063650314d614610134578063715018a61461016e5780638da5cb5b146101765780638f32d59b1461019a575b600080fd5b6100fa600480360360208110156100ea57600080fd5b50356001600160a01b031661029d565b005b6101226004803603602081101561011257600080fd5b50356001600160a01b0316610382565b60408051918252519081900360200190f35b61015a6004803603602081101561014a57600080fd5b50356001600160a01b031661039d565b604080519115158252519081900360200190f35b6100fa6103c6565b61017e610469565b604080516001600160a01b039092168252519081900360200190f35b61015a610478565b61017e61049c565b6101d0600480360360208110156101c057600080fd5b50356001600160a01b03166104ab565b6040805163ffffffff9092168252519081900360200190f35b61015a6104cf565b6100fa6004803603608081101561020757600080fd5b5080359060208101351515906001600160a01b0360408201351690606001356104df565b6100fa6004803603602081101561024157600080fd5b50356001600160a01b03166105c5565b6100fa6004803603602081101561026757600080fd5b50356001600160a01b0316610681565b61015a6004803603602081101561028d57600080fd5b50356001600160a01b03166106e6565b60015460408051634d1a687d60e01b81526001600160a01b03848116600483015291516000939290921691634d1a687d9160248082019260209290919082900301818787803b1580156102ef57600080fd5b505af1158015610303573d6000803e3d6000fd5b505050506040513d602081101561031957600080fd5b5051600081815260036020908152604091829020805460ff1916600117905581518381526001600160a01b0386169181019190915281519293507f023f92af5f59336c90c38c89410acf21801e112289cf776fbe3dfa7f300dbff7929081900390910190a15050565b6001600160a01b031660009081526004602052604090205490565b6001600160a01b0316600090815260046020526040902060010154640100000000900460ff1690565b6103ce610478565b61041f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600080546001600160a01b031661048d6106f7565b6001600160a01b031614905090565b6002546001600160a01b031690565b6001600160a01b031660009081526004602052604090206001015463ffffffff1690565b600054600160a01b900460ff1690565b6002546001600160a01b031633146104f657600080fd5b60008181526003602052604090205460ff1661051157600080fd5b6000805460ff60a01b1916600160a01b8515159081029190911782556001600160a01b0384168252600460209081526040808420888155600101805464ff00000000191664010000000085021763ffffffff1916426301dfe2000163ffffffff161790558484526003825292839020805460ff191690558251918252810183905281517fbf59b978135d33813ee8e3ded58396d9328c70d082d236f1bf1db922a392c4aa929181900390910190a150505050565b6105cd610478565b61061e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280546001600160a01b038084166001600160a01b03199283161792839055600180549092169216918217905560408051918252517f441e3b056b114797955165bd03bb8393fc1658a713f09225de4745a8d068bf7d9181900360200190a150565b610689610478565b6106da576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106e3816106fb565b50565b60006106f18261039d565b92915050565b3390565b6001600160a01b0381166107405760405162461bcd60e51b815260040180806020018281038252602681526020018061079c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a723158206f3127fa574e79d244cf4e19ba65b39463de3e9a3dedc95de6e6f58833826e0364736f6c63430005110032",
  "deployedSourceMap": "142:2388:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;142:2388:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;928:194;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;928:194:5;-1:-1:-1;;;;;928:194:5;;:::i;:::-;;2104:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2104:134:5;-1:-1:-1;;;;;2104:134:5;;:::i;:::-;;;;;;;;;;;;;;;;2384:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2384:144:5;-1:-1:-1;;;;;2384:144:5;;:::i;:::-;;;;;;;;;;;;;;;;;;1684:137:3;;;:::i;899:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;899:77:3;;;;;;;;;;;;;;1250:92;;;:::i;1923:95:5:-;;;:::i;2243:136::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2243:136:5;-1:-1:-1;;;;;2243:136:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;2024:74;;;:::i;1128:436::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1128:436:5;;;;;;;;;;-1:-1:-1;;;;;1128:436:5;;;;;;;;;;:::i;676:246::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;676:246:5;-1:-1:-1;;;;;676:246:5;;:::i;1970:107:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1970:107:3;-1:-1:-1;;;;;1970:107:3;;:::i;1802:115:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1802:115:5;-1:-1:-1;;;;;1802:115:5;;:::i;928:194::-;996:14;;:32;;;-1:-1:-1;;;996:32:5;;-1:-1:-1;;;;;996:32:5;;;;;;;;;983:10;;996:14;;;;;:21;;:32;;;;;;;;;;;;;;;983:10;996:14;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;996:32:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;996:32:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;996:32:5;1038:14;;;;:10;996:32;1038:14;;;;;;;;:21;;-1:-1:-1;;1038:21:5;1055:4;1038:21;;;1075:40;;;;;-1:-1:-1;;;;;1075:40:5;;;;;;;;;;;996:32;;-1:-1:-1;1075:40:5;;;;;;;;;;;928:194;;:::o;2104:134::-;-1:-1:-1;;;;;2193:27:5;2167:7;2193:27;;;:16;:27;;;;;:38;;2104:134::o;2384:144::-;-1:-1:-1;;;;;2481:27:5;2458:4;2481:27;;;:16;:27;;;;;:40;;;;;;;;;2384:144::o;1684:137:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:3;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;;;;;1795:19:3;;;1684:137::o;899:77::-;937:7;963:6;-1:-1:-1;;;;;963:6:3;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:3;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:3;;1306:29;;1250:92;:::o;1923:95:5:-;1998:13;;-1:-1:-1;;;;;1998:13:5;1923:95;:::o;2243:136::-;-1:-1:-1;;;;;2333:27:5;2308:6;2333:27;;;:16;:27;;;;;:39;;;;;;2243:136::o;2024:74::-;2063:4;2086:5;-1:-1:-1;;;2086:5:5;;;;;2024:74::o;1128:436::-;1624:13;;-1:-1:-1;;;;;1624:13:5;1610:10;:27;1602:36;;;;;;1248:15;;;;:10;:15;;;;;;;;1240:24;;;;;;1274:5;:14;;-1:-1:-1;;;;1274:14:5;-1:-1:-1;;;1274:14:5;;;;;;;;;;;;-1:-1:-1;;;;;1298:27:5;;;;:16;:27;;;;;;;;:51;;;-1:-1:-1;1359:40:5;:49;;-1:-1:-1;;1359:49:5;;;;;-1:-1:-1;;1418:64:5;1467:3;1473:8;1467:14;1418:64;;;;;1499:15;;;:10;:15;;;;;;1492:22;;-1:-1:-1;;1492:22:5;;;1529:28;;;;;;;;;;;;;;;;;;;;;;;1128:436;;;;:::o;676:246::-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:13:5;:38;;-1:-1:-1;;;;;769:38:5;;;-1:-1:-1;;;;;;769:38:5;;;;;;;;;817:47;;;;;850:13;;817:47;;;;;879:36;;;;;;;;;;;;;;;;676:246;:::o;1970:107:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;1095:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;1802:115:5:-;1863:4;1886:24;1900:9;1886:13;:24::i;:::-;1879:31;1802:115;-1:-1:-1;;1802:115:5:o;788:96:0:-;867:10;788:96;:::o;2178:225:3:-;-1:-1:-1;;;;;2251:22:3;;2243:73;;;;-1:-1:-1;;;2243:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:3;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:3;-1:-1:-1;;;;;2379:17:3;;;;;;;;;;2178:225::o",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "offset": [
    142,
    2530
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB18B78DD GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDDEF9AC0 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDDEF9AC0 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xE9E17A9E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0x277 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xB18B78DD EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xC944D2CA EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xD1D3C97C EQ PUSH2 0x1E9 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x272EE97 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x3A521B87 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x650314D6 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x19A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x478 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x49C JUMP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x4CF JUMP JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x4DF JUMP JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x681 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4D1A687D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0x4D1A687D SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP3 SWAP4 POP PUSH32 0x23F92AF5F59336C90C38C89410ACF21801E112289CF776FBE3DFA7F300DBFF7 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3CE PUSH2 0x478 JUMP JUMPDEST PUSH2 0x41F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x48D PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP6 ISZERO ISZERO SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH5 0x100000000 DUP6 MUL OR PUSH4 0xFFFFFFFF NOT AND TIMESTAMP PUSH4 0x1DFE200 ADD PUSH4 0xFFFFFFFF AND OR SWAP1 SSTORE DUP5 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0xBF59B978135D33813EE8E3DED58396D9328C70D082D236F1BF1DB922A392C4AA SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x5CD PUSH2 0x478 JUMP JUMPDEST PUSH2 0x61E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x441E3B056B114797955165BD03BB8393FC1658A713F09225DE4745A8D068BF7D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x689 PUSH2 0x478 JUMP JUMPDEST PUSH2 0x6DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6E3 DUP2 PUSH2 0x6FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 DUP3 PUSH2 0x39D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x79C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A265627A7A723158206F3127FA574E79 0xD2 DIFFICULTY 0xCF 0x4E NOT 0xBA PUSH6 0xB39463DE3E9A RETURNDATASIZE 0xED 0xC9 0x5D 0xE6 0xE6 CREATE2 DUP9 CALLER DUP3 PUSH15 0x364736F6C63430005110032000000 ",
  "pcMap": {
    "0": {
      "offset": [
        142,
        2530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        142,
        2530
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB18B78DD"
    },
    "38": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDDEF9AC0"
    },
    "49": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDDEF9AC0"
    },
    "60": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F1"
    },
    "64": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE9E17A9E"
    },
    "71": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22B"
    },
    "75": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x251"
    },
    "86": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFE9FBB80"
    },
    "93": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x277"
    },
    "97": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMP",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB18B78DD"
    },
    "109": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A2"
    },
    "113": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC944D2CA"
    },
    "120": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AA"
    },
    "124": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD1D3C97C"
    },
    "131": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E9"
    },
    "135": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMP",
      "path": "5"
    },
    "140": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "142": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x272EE97"
    },
    "147": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "153": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3A521B87"
    },
    "158": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "164": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x650314D6"
    },
    "169": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x134"
    },
    "173": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "180": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16E"
    },
    "184": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "191": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x176"
    },
    "195": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8F32D59B"
    },
    "202": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A"
    },
    "206": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "208": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "DUP1",
      "path": "5"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        142,
        2530
      ],
      "op": "REVERT",
      "path": "5"
    },
    "212": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "213": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA"
    },
    "216": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "218": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "DUP1",
      "path": "5"
    },
    "219": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "220": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "SUB",
      "path": "5"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "223": {
      "op": "DUP2"
    },
    "224": {
      "op": "LT"
    },
    "225": {
      "op": "ISZERO"
    },
    "226": {
      "op": "PUSH2",
      "value": "0xEA"
    },
    "229": {
      "op": "JUMPI"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "232": {
      "op": "DUP1"
    },
    "233": {
      "op": "REVERT"
    },
    "234": {
      "op": "JUMPDEST"
    },
    "235": {
      "op": "POP"
    },
    "236": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "243": {
      "op": "SHL"
    },
    "244": {
      "op": "SUB"
    },
    "245": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "AND",
      "path": "5"
    },
    "246": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29D"
    },
    "249": {
      "fn": "CallerContract.updateKYC",
      "jump": "i",
      "offset": [
        928,
        1122
      ],
      "op": "JUMP",
      "path": "5"
    },
    "250": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "251": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "STOP",
      "path": "5"
    },
    "252": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "253": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x122"
    },
    "256": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "258": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "DUP1",
      "path": "5"
    },
    "259": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "260": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "SUB",
      "path": "5"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "263": {
      "op": "DUP2"
    },
    "264": {
      "op": "LT"
    },
    "265": {
      "op": "ISZERO"
    },
    "266": {
      "op": "PUSH2",
      "value": "0x112"
    },
    "269": {
      "op": "JUMPI"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "272": {
      "op": "DUP1"
    },
    "273": {
      "op": "REVERT"
    },
    "274": {
      "op": "JUMPDEST"
    },
    "275": {
      "op": "POP"
    },
    "276": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "AND",
      "path": "5"
    },
    "286": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x382"
    },
    "289": {
      "fn": "CallerContract.getCustomerId",
      "jump": "i",
      "offset": [
        2104,
        2238
      ],
      "op": "JUMP",
      "path": "5"
    },
    "290": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "291": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "293": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "DUP1",
      "path": "5"
    },
    "294": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "295": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "296": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "DUP3",
      "path": "5"
    },
    "297": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "298": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "299": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "300": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "DUP2",
      "path": "5"
    },
    "301": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "302": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "SUB",
      "path": "5"
    },
    "303": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "305": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "ADD",
      "path": "5"
    },
    "306": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "307": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "RETURN",
      "path": "5"
    },
    "308": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "309": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A"
    },
    "312": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "314": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "DUP1",
      "path": "5"
    },
    "315": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "316": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "SUB",
      "path": "5"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "319": {
      "op": "DUP2"
    },
    "320": {
      "op": "LT"
    },
    "321": {
      "op": "ISZERO"
    },
    "322": {
      "op": "PUSH2",
      "value": "0x14A"
    },
    "325": {
      "op": "JUMPI"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "328": {
      "op": "DUP1"
    },
    "329": {
      "op": "REVERT"
    },
    "330": {
      "op": "JUMPDEST"
    },
    "331": {
      "op": "POP"
    },
    "332": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "339": {
      "op": "SHL"
    },
    "340": {
      "op": "SUB"
    },
    "341": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "AND",
      "path": "5"
    },
    "342": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39D"
    },
    "345": {
      "fn": "CallerContract.getCustomerAuthorization",
      "jump": "i",
      "offset": [
        2384,
        2528
      ],
      "op": "JUMP",
      "path": "5"
    },
    "346": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "347": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "349": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "DUP1",
      "path": "5"
    },
    "350": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "351": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "352": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "353": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "354": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "DUP3",
      "path": "5"
    },
    "355": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "356": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "357": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "358": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "DUP2",
      "path": "5"
    },
    "359": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "360": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "SUB",
      "path": "5"
    },
    "361": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "363": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "ADD",
      "path": "5"
    },
    "364": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "365": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "RETURN",
      "path": "5"
    },
    "366": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1684,
        1821
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1684,
        1821
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFA"
    },
    "370": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1684,
        1821
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C6"
    },
    "373": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1684,
        1821
      ],
      "op": "JUMP",
      "path": "3"
    },
    "374": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "375": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17E"
    },
    "378": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x469"
    },
    "381": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        899,
        976
      ],
      "op": "JUMP",
      "path": "3"
    },
    "382": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "383": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "385": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "386": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "393": {
      "op": "SHL"
    },
    "394": {
      "op": "SUB"
    },
    "395": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "396": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "397": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "AND",
      "path": "3"
    },
    "398": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "DUP3",
      "path": "3"
    },
    "399": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "400": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "401": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "402": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "DUP2",
      "path": "3"
    },
    "403": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "404": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "SUB",
      "path": "3"
    },
    "405": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "407": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "ADD",
      "path": "3"
    },
    "408": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "409": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "RETURN",
      "path": "3"
    },
    "410": {
      "fn": "Ownable.isOwner",
      "offset": [
        1250,
        1342
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "411": {
      "fn": "Ownable.isOwner",
      "offset": [
        1250,
        1342
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15A"
    },
    "414": {
      "fn": "Ownable.isOwner",
      "offset": [
        1250,
        1342
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "417": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        1250,
        1342
      ],
      "op": "JUMP",
      "path": "3"
    },
    "418": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1923,
        2018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "419": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1923,
        2018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17E"
    },
    "422": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1923,
        2018
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x49C"
    },
    "425": {
      "fn": "CallerContract.getOracleAddress",
      "jump": "i",
      "offset": [
        1923,
        2018
      ],
      "op": "JUMP",
      "path": "5"
    },
    "426": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "427": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D0"
    },
    "430": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "432": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "DUP1",
      "path": "5"
    },
    "433": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "434": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "SUB",
      "path": "5"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "437": {
      "op": "DUP2"
    },
    "438": {
      "op": "LT"
    },
    "439": {
      "op": "ISZERO"
    },
    "440": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "443": {
      "op": "JUMPI"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "446": {
      "op": "DUP1"
    },
    "447": {
      "op": "REVERT"
    },
    "448": {
      "op": "JUMPDEST"
    },
    "449": {
      "op": "POP"
    },
    "450": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "457": {
      "op": "SHL"
    },
    "458": {
      "op": "SUB"
    },
    "459": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "AND",
      "path": "5"
    },
    "460": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AB"
    },
    "463": {
      "fn": "CallerContract.getCustomerDate",
      "jump": "i",
      "offset": [
        2243,
        2379
      ],
      "op": "JUMP",
      "path": "5"
    },
    "464": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "465": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "467": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "DUP1",
      "path": "5"
    },
    "468": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "469": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "474": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "475": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "476": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "AND",
      "path": "5"
    },
    "477": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "DUP3",
      "path": "5"
    },
    "478": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "479": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "480": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "481": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "482": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "483": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "SUB",
      "path": "5"
    },
    "484": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "486": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "ADD",
      "path": "5"
    },
    "487": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "488": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "RETURN",
      "path": "5"
    },
    "489": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2024,
        2098
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "490": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2024,
        2098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A"
    },
    "493": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2024,
        2098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4CF"
    },
    "496": {
      "fn": "CallerContract.getKYC",
      "jump": "i",
      "offset": [
        2024,
        2098
      ],
      "op": "JUMP",
      "path": "5"
    },
    "497": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "498": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA"
    },
    "501": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "503": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "504": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "505": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "SUB",
      "path": "5"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "508": {
      "op": "DUP2"
    },
    "509": {
      "op": "LT"
    },
    "510": {
      "op": "ISZERO"
    },
    "511": {
      "op": "PUSH2",
      "value": "0x207"
    },
    "514": {
      "op": "JUMPI"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "517": {
      "op": "DUP1"
    },
    "518": {
      "op": "REVERT"
    },
    "519": {
      "op": "JUMPDEST"
    },
    "520": {
      "op": "POP"
    },
    "521": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "522": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "523": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "524": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "526": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "527": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "ADD",
      "path": "5"
    },
    "528": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "529": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "530": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "531": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "538": {
      "op": "SHL"
    },
    "539": {
      "op": "SUB"
    },
    "540": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "542": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "543": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "ADD",
      "path": "5"
    },
    "544": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "545": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "AND",
      "path": "5"
    },
    "546": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "547": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "549": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "ADD",
      "path": "5"
    },
    "550": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "551": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4DF"
    },
    "554": {
      "fn": "CallerContract.callback",
      "jump": "i",
      "offset": [
        1128,
        1564
      ],
      "op": "JUMP",
      "path": "5"
    },
    "555": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "556": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA"
    },
    "559": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "561": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "DUP1",
      "path": "5"
    },
    "562": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "563": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "SUB",
      "path": "5"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "566": {
      "op": "DUP2"
    },
    "567": {
      "op": "LT"
    },
    "568": {
      "op": "ISZERO"
    },
    "569": {
      "op": "PUSH2",
      "value": "0x241"
    },
    "572": {
      "op": "JUMPI"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "575": {
      "op": "DUP1"
    },
    "576": {
      "op": "REVERT"
    },
    "577": {
      "op": "JUMPDEST"
    },
    "578": {
      "op": "POP"
    },
    "579": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "586": {
      "op": "SHL"
    },
    "587": {
      "op": "SUB"
    },
    "588": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "AND",
      "path": "5"
    },
    "589": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5C5"
    },
    "592": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "jump": "i",
      "offset": [
        676,
        922
      ],
      "op": "JUMP",
      "path": "5"
    },
    "593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFA"
    },
    "597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "DUP1",
      "path": "3"
    },
    "600": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "601": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "SUB",
      "path": "3"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "604": {
      "op": "DUP2"
    },
    "605": {
      "op": "LT"
    },
    "606": {
      "op": "ISZERO"
    },
    "607": {
      "op": "PUSH2",
      "value": "0x267"
    },
    "610": {
      "op": "JUMPI"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "613": {
      "op": "DUP1"
    },
    "614": {
      "op": "REVERT"
    },
    "615": {
      "op": "JUMPDEST"
    },
    "616": {
      "op": "POP"
    },
    "617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "AND",
      "path": "3"
    },
    "627": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x681"
    },
    "630": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1970,
        2077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "631": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "632": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A"
    },
    "635": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "637": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "DUP1",
      "path": "5"
    },
    "638": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "639": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "SUB",
      "path": "5"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "642": {
      "op": "DUP2"
    },
    "643": {
      "op": "LT"
    },
    "644": {
      "op": "ISZERO"
    },
    "645": {
      "op": "PUSH2",
      "value": "0x28D"
    },
    "648": {
      "op": "JUMPI"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "651": {
      "op": "DUP1"
    },
    "652": {
      "op": "REVERT"
    },
    "653": {
      "op": "JUMPDEST"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "662": {
      "op": "SHL"
    },
    "663": {
      "op": "SUB"
    },
    "664": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "AND",
      "path": "5"
    },
    "665": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E6"
    },
    "668": {
      "fn": "CallerContract.isAuthorized",
      "jump": "i",
      "offset": [
        1802,
        1917
      ],
      "op": "JUMP",
      "path": "5"
    },
    "669": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "670": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "672": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1010
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "673": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "675": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP1",
      "path": "5"
    },
    "676": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "677": {
      "op": "PUSH4",
      "value": "0x4D1A687D"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "686": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP5",
      "path": "5"
    },
    "696": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "697": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "AND",
      "path": "5"
    },
    "698": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "700": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP4",
      "path": "5"
    },
    "701": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "ADD",
      "path": "5"
    },
    "702": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "703": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "704": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "705": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        983,
        993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "707": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        983,
        993
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "708": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1010
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "709": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1010
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "710": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1010
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "711": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1010
      ],
      "op": "AND",
      "path": "5"
    },
    "712": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1010
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "713": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1017
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4D1A687D"
    },
    "718": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1017
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "719": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "721": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP1",
      "path": "5"
    },
    "722": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP3",
      "path": "5"
    },
    "723": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "ADD",
      "path": "5"
    },
    "724": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "725": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "727": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "728": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "729": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "730": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "731": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP3",
      "path": "5"
    },
    "732": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "733": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SUB",
      "path": "5"
    },
    "734": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "ADD",
      "path": "5"
    },
    "735": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "736": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        983,
        993
      ],
      "op": "DUP8",
      "path": "5"
    },
    "737": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1010
      ],
      "op": "DUP8",
      "path": "5"
    },
    "738": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "DUP1",
      "path": "5"
    },
    "739": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "740": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "741": {
      "op": "DUP1"
    },
    "742": {
      "op": "ISZERO"
    },
    "743": {
      "op": "PUSH2",
      "value": "0x2EF"
    },
    "746": {
      "op": "JUMPI"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "749": {
      "op": "DUP1"
    },
    "750": {
      "op": "REVERT"
    },
    "751": {
      "op": "JUMPDEST"
    },
    "752": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "POP",
      "path": "5"
    },
    "753": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "GAS",
      "path": "5"
    },
    "754": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "CALL",
      "path": "5"
    },
    "755": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "756": {
      "op": "DUP1"
    },
    "757": {
      "op": "ISZERO"
    },
    "758": {
      "op": "PUSH2",
      "value": "0x303"
    },
    "761": {
      "op": "JUMPI"
    },
    "762": {
      "op": "RETURNDATASIZE"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "765": {
      "op": "DUP1"
    },
    "766": {
      "op": "RETURNDATACOPY"
    },
    "767": {
      "op": "RETURNDATASIZE"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "770": {
      "op": "REVERT"
    },
    "771": {
      "op": "JUMPDEST"
    },
    "772": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "POP",
      "path": "5"
    },
    "773": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "POP",
      "path": "5"
    },
    "774": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "POP",
      "path": "5"
    },
    "775": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "POP",
      "path": "5"
    },
    "776": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "778": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "779": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "782": {
      "op": "DUP2"
    },
    "783": {
      "op": "LT"
    },
    "784": {
      "op": "ISZERO"
    },
    "785": {
      "op": "PUSH2",
      "value": "0x319"
    },
    "788": {
      "op": "JUMPI"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "791": {
      "op": "DUP1"
    },
    "792": {
      "op": "REVERT"
    },
    "793": {
      "op": "JUMPDEST"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "796": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x0"
    },
    "798": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "799": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "800": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "801": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "803": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "805": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "806": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "807": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "808": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "810": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "811": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "DUP3",
      "path": "5"
    },
    "812": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "813": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1052
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "814": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1059
      ],
      "op": "DUP1",
      "path": "5"
    },
    "815": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1059
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "818": {
      "op": "NOT"
    },
    "819": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1059
      ],
      "op": "AND",
      "path": "5"
    },
    "820": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1055,
        1059
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "822": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1059
      ],
      "op": "OR",
      "path": "5"
    },
    "823": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1059
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "824": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1038,
        1059
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "825": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 1
    },
    "826": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "827": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP4",
      "path": "5"
    },
    "828": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "829": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "836": {
      "op": "SHL"
    },
    "837": {
      "op": "SUB"
    },
    "838": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP7",
      "path": "5"
    },
    "839": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "AND",
      "path": "5"
    },
    "840": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "841": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "842": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "ADD",
      "path": "5"
    },
    "843": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "844": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "845": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "846": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "847": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "848": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "849": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "850": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        996,
        1028
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x23F92AF5F59336C90C38C89410ACF21801E112289CF776FBE3DFA7F300DBFF7"
    },
    "885": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "886": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "887": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "888": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "889": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SUB",
      "path": "5"
    },
    "890": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "891": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "892": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "ADD",
      "path": "5"
    },
    "893": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "894": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1075,
        1115
      ],
      "op": "LOG1",
      "path": "5"
    },
    "895": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "POP",
      "path": "5"
    },
    "896": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        928,
        1122
      ],
      "op": "POP",
      "path": "5"
    },
    "897": {
      "fn": "CallerContract.updateKYC",
      "jump": "o",
      "offset": [
        928,
        1122
      ],
      "op": "JUMP",
      "path": "5"
    },
    "898": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2104,
        2238
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "SUB"
    },
    "907": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "AND",
      "path": "5",
      "statement": 2
    },
    "908": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2167,
        2174
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "910": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "911": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "DUP2",
      "path": "5"
    },
    "912": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "913": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "915": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "917": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "918": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "920": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "921": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2220
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "922": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2231
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "923": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2193,
        2231
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "924": {
      "fn": "CallerContract.getCustomerId",
      "jump": "o",
      "offset": [
        2104,
        2238
      ],
      "op": "JUMP",
      "path": "5"
    },
    "925": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2384,
        2528
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "AND",
      "path": "5",
      "statement": 3
    },
    "935": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2458,
        2462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "937": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "938": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "DUP2",
      "path": "5"
    },
    "939": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "940": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2497
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "942": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "944": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "945": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "947": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "948": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2508
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "949": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "951": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "ADD",
      "path": "5"
    },
    "952": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "953": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "PUSH5",
      "path": "5",
      "value": "0x100000000"
    },
    "959": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "960": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "DIV",
      "path": "5"
    },
    "961": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "963": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "AND",
      "path": "5"
    },
    "964": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2481,
        2521
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "965": {
      "fn": "CallerContract.getCustomerAuthorization",
      "jump": "o",
      "offset": [
        2384,
        2528
      ],
      "op": "JUMP",
      "path": "5"
    },
    "966": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1684,
        1821
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "967": {
      "offset": [
        1103,
        1112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CE"
    },
    "970": {
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "973": {
      "jump": "i",
      "offset": [
        1103,
        1112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "974": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1103,
        1112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "975": {
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41F"
    },
    "978": {
      "offset": [
        1095,
        1149
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "979": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "981": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP1",
      "path": "3"
    },
    "982": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "989": {
      "op": "SHL"
    },
    "990": {
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "991": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "992": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "994": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "996": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "997": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "998": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "999": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1000": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1001": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1003": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1004": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1005": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1006": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1039": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1041": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1042": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1043": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1044": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1045": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1046": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1047": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1048": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1049": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SUB",
      "path": "3"
    },
    "1050": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1052": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1053": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1054": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1055": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1056": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1782,
        1783
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x0"
    },
    "1058": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1766,
        1772
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1059": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1766,
        1772
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1060": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1745,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1062": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1745,
        1785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "SUB"
    },
    "1071": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1766,
        1772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1072": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1766,
        1772
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1073": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1766,
        1772
      ],
      "op": "AND",
      "path": "3"
    },
    "1074": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1766,
        1772
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1075": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1745,
        1785
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1108": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1745,
        1785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1109": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1782,
        1783
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1110": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1782,
        1783
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1111": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1745,
        1785
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1112": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "1114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1814
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1115": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1814
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "op": "SUB"
    },
    "1124": {
      "op": "NOT"
    },
    "1125": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1814
      ],
      "op": "AND",
      "path": "3"
    },
    "1126": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1814
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1127": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1795,
        1814
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1128": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1684,
        1821
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1129": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1130": {
      "fn": "Ownable.owner",
      "offset": [
        937,
        944
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1132": {
      "fn": "Ownable.owner",
      "offset": [
        963,
        969
      ],
      "op": "SLOAD",
      "path": "3",
      "statement": 6
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1139": {
      "op": "SHL"
    },
    "1140": {
      "op": "SUB"
    },
    "1141": {
      "fn": "Ownable.owner",
      "offset": [
        963,
        969
      ],
      "op": "AND",
      "path": "3"
    },
    "1142": {
      "fn": "Ownable.owner",
      "offset": [
        899,
        976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1143": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        899,
        976
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1144": {
      "fn": "Ownable.isOwner",
      "offset": [
        1250,
        1342
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1145": {
      "fn": "Ownable.isOwner",
      "offset": [
        1290,
        1294
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1147": {
      "fn": "Ownable.isOwner",
      "offset": [
        1329,
        1335
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 7
    },
    "1148": {
      "fn": "Ownable.isOwner",
      "offset": [
        1329,
        1335
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "op": "SUB"
    },
    "1157": {
      "fn": "Ownable.isOwner",
      "offset": [
        1329,
        1335
      ],
      "op": "AND",
      "path": "3"
    },
    "1158": {
      "fn": "Ownable.isOwner",
      "offset": [
        1313,
        1325
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48D"
    },
    "1161": {
      "fn": "Ownable.isOwner",
      "offset": [
        1313,
        1323
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F7"
    },
    "1164": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        1313,
        1325
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1165": {
      "fn": "Ownable.isOwner",
      "offset": [
        1313,
        1325
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "op": "SUB"
    },
    "1174": {
      "fn": "Ownable.isOwner",
      "offset": [
        1313,
        1335
      ],
      "op": "AND",
      "path": "3"
    },
    "1175": {
      "fn": "Ownable.isOwner",
      "offset": [
        1313,
        1335
      ],
      "op": "EQ",
      "path": "3"
    },
    "1176": {
      "fn": "Ownable.isOwner",
      "offset": [
        1306,
        1335
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1177": {
      "fn": "Ownable.isOwner",
      "offset": [
        1306,
        1335
      ],
      "op": "POP",
      "path": "3"
    },
    "1178": {
      "fn": "Ownable.isOwner",
      "offset": [
        1250,
        1342
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1179": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        1250,
        1342
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1180": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1923,
        2018
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1181": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1998,
        2011
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x2"
    },
    "1183": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1998,
        2011
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1190": {
      "op": "SHL"
    },
    "1191": {
      "op": "SUB"
    },
    "1192": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1998,
        2011
      ],
      "op": "AND",
      "path": "5"
    },
    "1193": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1923,
        2018
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1194": {
      "fn": "CallerContract.getOracleAddress",
      "jump": "o",
      "offset": [
        1923,
        2018
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1195": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2243,
        2379
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "op": "SUB"
    },
    "1204": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "AND",
      "path": "5",
      "statement": 9
    },
    "1205": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2308,
        2314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1207": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1208": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1209": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1210": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2349
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1212": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1214": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1215": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1217": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1218": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2360
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1219": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1221": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2372
      ],
      "op": "ADD",
      "path": "5"
    },
    "1222": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2372
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1223": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2372
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "1228": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2372
      ],
      "op": "AND",
      "path": "5"
    },
    "1229": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2333,
        2372
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1230": {
      "fn": "CallerContract.getCustomerDate",
      "jump": "o",
      "offset": [
        2243,
        2379
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1231": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2024,
        2098
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1232": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2063,
        2067
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1234": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2086,
        2091
      ],
      "op": "SLOAD",
      "path": "5",
      "statement": 10
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2086,
        2091
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1241": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2086,
        2091
      ],
      "op": "DIV",
      "path": "5"
    },
    "1242": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2086,
        2091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1244": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2086,
        2091
      ],
      "op": "AND",
      "path": "5"
    },
    "1245": {
      "fn": "CallerContract.getKYC",
      "offset": [
        2086,
        2091
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1246": {
      "fn": "CallerContract.getKYC",
      "jump": "o",
      "offset": [
        2024,
        2098
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1247": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1248": {
      "offset": [
        1624,
        1637
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1250": {
      "fn": "CallerContract.callback",
      "offset": [
        1624,
        1637
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1257": {
      "op": "SHL"
    },
    "1258": {
      "op": "SUB"
    },
    "1259": {
      "offset": [
        1624,
        1637
      ],
      "op": "AND",
      "path": "5"
    },
    "1260": {
      "offset": [
        1610,
        1620
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1261": {
      "offset": [
        1610,
        1637
      ],
      "op": "EQ",
      "path": "5"
    },
    "1262": {
      "offset": [
        1602,
        1638
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4F6"
    },
    "1265": {
      "offset": [
        1602,
        1638
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1266": {
      "fn": "CallerContract.callback",
      "offset": [
        1602,
        1638
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1268": {
      "fn": "CallerContract.callback",
      "offset": [
        1602,
        1638
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1269": {
      "fn": "CallerContract.callback",
      "offset": [
        1602,
        1638
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1270": {
      "fn": "CallerContract.callback",
      "offset": [
        1602,
        1638
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1271": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x0"
    },
    "1273": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1274": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1275": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1276": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1258
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1278": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1280": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1281": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1283": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1284": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1285": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1286": {
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1288": {
      "branch": 27,
      "fn": "CallerContract.callback",
      "offset": [
        1248,
        1263
      ],
      "op": "AND",
      "path": "5"
    },
    "1289": {
      "fn": "CallerContract.callback",
      "offset": [
        1240,
        1264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x511"
    },
    "1292": {
      "branch": 27,
      "fn": "CallerContract.callback",
      "offset": [
        1240,
        1264
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1293": {
      "fn": "CallerContract.callback",
      "offset": [
        1240,
        1264
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1295": {
      "fn": "CallerContract.callback",
      "offset": [
        1240,
        1264
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1296": {
      "fn": "CallerContract.callback",
      "offset": [
        1240,
        1264
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1297": {
      "fn": "CallerContract.callback",
      "offset": [
        1240,
        1264
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1298": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1279
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x0"
    },
    "1300": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1301": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "op": "NOT"
    },
    "1308": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "AND",
      "path": "5"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1315": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1316": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1317": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1318": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1319": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "MUL",
      "path": "5"
    },
    "1320": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1321": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1322": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1323": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "OR",
      "path": "5"
    },
    "1324": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1325": {
      "fn": "CallerContract.callback",
      "offset": [
        1274,
        1288
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1332": {
      "op": "SHL"
    },
    "1333": {
      "op": "SUB"
    },
    "1334": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 13
    },
    "1335": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "AND",
      "path": "5"
    },
    "1336": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1337": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1338": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1340": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1342": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1343": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1344": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1345": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1347": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1348": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1349": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1325
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1350": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1349
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1351": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1349
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1352": {
      "fn": "CallerContract.callback",
      "offset": [
        1298,
        1349
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "fn": "CallerContract.callback",
      "offset": [
        1359,
        1399
      ],
      "op": "ADD",
      "path": "5",
      "statement": 14
    },
    "1356": {
      "fn": "CallerContract.callback",
      "offset": [
        1359,
        1408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1357": {
      "fn": "CallerContract.callback",
      "offset": [
        1359,
        1408
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1358": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "1364": {
      "op": "NOT"
    },
    "1365": {
      "fn": "CallerContract.callback",
      "offset": [
        1359,
        1408
      ],
      "op": "AND",
      "path": "5"
    },
    "1366": {
      "fn": "CallerContract.callback",
      "offset": [
        1359,
        1408
      ],
      "op": "PUSH5",
      "path": "5",
      "value": "0x100000000"
    },
    "1372": {
      "fn": "CallerContract.callback",
      "offset": [
        1359,
        1408
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1373": {
      "fn": "CallerContract.callback",
      "offset": [
        1359,
        1408
      ],
      "op": "MUL",
      "path": "5"
    },
    "1374": {
      "fn": "CallerContract.callback",
      "offset": [
        1359,
        1408
      ],
      "op": "OR",
      "path": "5"
    },
    "1375": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1380": {
      "op": "NOT"
    },
    "1381": {
      "fn": "CallerContract.callback",
      "offset": [
        1418,
        1482
      ],
      "op": "AND",
      "path": "5",
      "statement": 15
    },
    "1382": {
      "fn": "CallerContract.callback",
      "offset": [
        1467,
        1470
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1383": {
      "fn": "CallerContract.callback",
      "offset": [
        1473,
        1481
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1DFE200"
    },
    "1388": {
      "fn": "CallerContract.callback",
      "offset": [
        1467,
        1481
      ],
      "op": "ADD",
      "path": "5"
    },
    "1389": {
      "fn": "CallerContract.callback",
      "offset": [
        1418,
        1482
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "1394": {
      "fn": "CallerContract.callback",
      "offset": [
        1418,
        1482
      ],
      "op": "AND",
      "path": "5"
    },
    "1395": {
      "fn": "CallerContract.callback",
      "offset": [
        1418,
        1482
      ],
      "op": "OR",
      "path": "5"
    },
    "1396": {
      "fn": "CallerContract.callback",
      "offset": [
        1418,
        1482
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1397": {
      "fn": "CallerContract.callback",
      "offset": [
        1418,
        1482
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1398": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 16
    },
    "1399": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1400": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1401": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1403": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1404": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1405": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1406": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1407": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1408": {
      "fn": "CallerContract.callback",
      "offset": [
        1499,
        1514
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1409": {
      "fn": "CallerContract.callback",
      "offset": [
        1492,
        1514
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1410": {
      "fn": "CallerContract.callback",
      "offset": [
        1492,
        1514
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1413": {
      "op": "NOT"
    },
    "1414": {
      "fn": "CallerContract.callback",
      "offset": [
        1492,
        1514
      ],
      "op": "AND",
      "path": "5"
    },
    "1415": {
      "fn": "CallerContract.callback",
      "offset": [
        1492,
        1514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1416": {
      "fn": "CallerContract.callback",
      "offset": [
        1492,
        1514
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1417": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 17
    },
    "1418": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1419": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1420": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1421": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1422": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1423": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "ADD",
      "path": "5"
    },
    "1424": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1425": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1426": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1427": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1428": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1429": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xBF59B978135D33813EE8E3DED58396D9328C70D082D236F1BF1DB922A392C4AA"
    },
    "1462": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1463": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1464": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1465": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1466": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SUB",
      "path": "5"
    },
    "1467": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1468": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1469": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "ADD",
      "path": "5"
    },
    "1470": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1471": {
      "fn": "CallerContract.callback",
      "offset": [
        1529,
        1557
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1472": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "POP",
      "path": "5"
    },
    "1473": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "POP",
      "path": "5"
    },
    "1474": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "POP",
      "path": "5"
    },
    "1475": {
      "fn": "CallerContract.callback",
      "offset": [
        1128,
        1564
      ],
      "op": "POP",
      "path": "5"
    },
    "1476": {
      "fn": "CallerContract.callback",
      "jump": "o",
      "offset": [
        1128,
        1564
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1477": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1478": {
      "offset": [
        1103,
        1112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CD"
    },
    "1481": {
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "1484": {
      "jump": "i",
      "offset": [
        1103,
        1112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1485": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1103,
        1112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1486": {
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x61E"
    },
    "1489": {
      "offset": [
        1095,
        1149
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1490": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1492": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1493": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1502": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1503": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1505": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1507": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1508": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1509": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1510": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1511": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1512": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1514": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1515": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1516": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1517": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1550": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1552": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1553": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1554": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1555": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1556": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1557": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1558": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1559": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1560": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "SUB",
      "path": "3"
    },
    "1561": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1563": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1564": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1565": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1566": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        1095,
        1149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1567": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        782
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 18,
      "value": "0x2"
    },
    "1569": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1570": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "op": "SUB"
    },
    "1579": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1580": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1581": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "AND",
      "path": "5"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1588": {
      "op": "SHL"
    },
    "1589": {
      "op": "SUB"
    },
    "1590": {
      "op": "NOT"
    },
    "1591": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1592": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1593": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "AND",
      "path": "5"
    },
    "1594": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "OR",
      "path": "5"
    },
    "1595": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1596": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1597": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1598": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1599": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        769,
        807
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1601": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 19
    },
    "1602": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1603": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1604": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1605": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "AND",
      "path": "5"
    },
    "1606": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        850,
        863
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1607": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        850,
        863
      ],
      "op": "AND",
      "path": "5"
    },
    "1608": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1609": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1610": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "OR",
      "path": "5"
    },
    "1611": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1612": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        817,
        864
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1613": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 20,
      "value": "0x40"
    },
    "1615": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1616": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1617": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1618": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1619": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1620": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1621": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x441E3B056B114797955165BD03BB8393FC1658A713F09225DE4745A8D068BF7D"
    },
    "1654": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1655": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1656": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1657": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "SUB",
      "path": "5"
    },
    "1658": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1660": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "ADD",
      "path": "5"
    },
    "1661": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1662": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        879,
        915
      ],
      "op": "LOG1",
      "path": "5"
    },
    "1663": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        676,
        922
      ],
      "op": "POP",
      "path": "5"
    },
    "1664": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "jump": "o",
      "offset": [
        676,
        922
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1665": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1666": {
      "offset": [
        1103,
        1112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x689"
    },
    "1669": {
      "offset": [
        1103,
        1110
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "1672": {
      "jump": "i",
      "offset": [
        1103,
        1112
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1673": {
      "branch": 28,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1103,
        1112
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1674": {
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6DA"
    },
    "1677": {
      "branch": 28,
      "offset": [
        1095,
        1149
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1678": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1693": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1695": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1696": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1697": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1698": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1699": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1700": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1702": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1740": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1741": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1742": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1743": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1745": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SUB",
      "path": "3"
    },
    "1749": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "ADD",
      "path": "3"
    },
    "1752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1095,
        1149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2042,
        2070
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0x6E3"
    },
    "1758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2061,
        2069
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2042,
        2060
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FB"
    },
    "1762": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2042,
        2070
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2042,
        2070
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1970,
        2077
      ],
      "op": "POP",
      "path": "3"
    },
    "1765": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1970,
        2077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1766": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1767": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1863,
        1867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1769": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1886,
        1910
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 22,
      "value": "0x6F1"
    },
    "1772": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1900,
        1909
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1773": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1886,
        1899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39D"
    },
    "1776": {
      "fn": "CallerContract.isAuthorized",
      "jump": "i",
      "offset": [
        1886,
        1910
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1777": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1886,
        1910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1778": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1879,
        1910
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1779": {
      "fn": "CallerContract.isAuthorized",
      "offset": [
        1802,
        1917
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1780": {
      "op": "POP"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "fn": "CallerContract.isAuthorized",
      "jump": "o",
      "offset": [
        1802,
        1917
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1783": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1784": {
      "fn": "Context._msgSender",
      "offset": [
        867,
        877
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 23
    },
    "1785": {
      "fn": "Context._msgSender",
      "offset": [
        788,
        884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1786": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        788,
        884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1787": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2178,
        2403
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "op": "SUB"
    },
    "1796": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2251,
        2273
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 24
    },
    "1797": {
      "branch": 29,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2251,
        2273
      ],
      "op": "AND",
      "path": "3"
    },
    "1798": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x740"
    },
    "1801": {
      "branch": 29,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1802": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1804": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1805": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1811": {
      "op": "SHL"
    },
    "1812": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1813": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1814": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1816": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "ADD",
      "path": "3"
    },
    "1817": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1818": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1819": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1821": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "ADD",
      "path": "3"
    },
    "1822": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1823": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1824": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "SUB",
      "path": "3"
    },
    "1825": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1826": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1827": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "1829": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1830": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1831": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1833": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "ADD",
      "path": "3"
    },
    "1834": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1835": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79C"
    },
    "1838": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "1840": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1841": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "1842": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1844": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "ADD",
      "path": "3"
    },
    "1845": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1846": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "POP",
      "path": "3"
    },
    "1847": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "POP",
      "path": "3"
    },
    "1848": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1850": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1851": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1852": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1853": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "SUB",
      "path": "3"
    },
    "1854": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1855": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1856": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2243,
        2316
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1857": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2352,
        2358
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x0"
    },
    "1859": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2352,
        2358
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1860": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2352,
        2358
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1861": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1863": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1870": {
      "op": "SHL"
    },
    "1871": {
      "op": "SUB"
    },
    "1872": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1873": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1874": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "AND",
      "path": "3"
    },
    "1875": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1876": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2352,
        2358
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1877": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2352,
        2358
      ],
      "op": "AND",
      "path": "3"
    },
    "1878": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2352,
        2358
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1879": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1913": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2331,
        2369
      ],
      "op": "LOG3",
      "path": "3"
    },
    "1914": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2385
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x0"
    },
    "1916": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "SUB"
    },
    "1926": {
      "op": "NOT"
    },
    "1927": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "AND",
      "path": "3"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1934": {
      "op": "SHL"
    },
    "1935": {
      "op": "SUB"
    },
    "1936": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1937": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "AND",
      "path": "3"
    },
    "1940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1941": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1942": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1943": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "OR",
      "path": "3"
    },
    "1944": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1945": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2379,
        2396
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1946": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2178,
        2403
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "f43af0e11e970ebdfc2ac6a08fa1ffd88a8a7b57",
  "source": "pragma solidity ^0.5.0;\n\nimport \"OpenZeppelin/openzeppelin-contracts@2.5.1/contracts/ownership/Ownable.sol\";\nimport \"./OracleInterface.sol\";\n\ncontract CallerContract is Ownable {\n\n    bool private isKYC = false;\n    OracleInterface private oracleInstance;\n    address private oracleAddress;\n    mapping(uint256=>bool) myRequests;\n\n    struct customer {\n        uint256 customerId;\n        uint32 expireyDate;\n        bool isAuthorized;\n    }\n\n    mapping (address => customer) customerRegistry;\n\n\n    event newOracleAddressEvent(address oracleAddress);\n    event ReceivedNewRequestIdEvent(uint256 id, address customer);\n    event KYCUpdatedEvent(bool isKYC, uint256 id);\n\n    function setOracleInstanceAddress(address _oracleInstanceAddress) public onlyOwner {\n        oracleAddress = _oracleInstanceAddress;\n        oracleInstance = OracleInterface(oracleAddress);\n        emit newOracleAddressEvent(oracleAddress);\n    }\n\n    function updateKYC(address _customer) public {\n        uint256 id = oracleInstance.getKYC(_customer);\n        myRequests[id] = true; \n        emit ReceivedNewRequestIdEvent(id, _customer);\n    }\n\n    function callback(uint256 _customerId, bool _isKYC, address _customer, uint256 _id) public onlyOracle {\n        require(myRequests[_id]);\n        isKYC = _isKYC;\n        customerRegistry[_customer].customerId= _customerId;\n        customerRegistry[_customer].isAuthorized = _isKYC;\n        customerRegistry[_customer].expireyDate = uint32(now + 52 weeks);\n        delete myRequests[_id];\n        emit KYCUpdatedEvent(_isKYC, _id);\n    }\n\n    modifier onlyOracle() {\n        require(msg.sender == oracleAddress);\n        _;\n    }\n    function _isAuthorized(address _customer) internal view returns (bool) {\n        return customerRegistry[_customer].isAuthorized;\n    }\n\n    function isAuthorized(address _customer) public view returns(bool) {\n        return _isAuthorized(_customer);\n    }\n\n    function getOracleAddress() public view returns (address) {\n        return oracleAddress;\n    }\n\n    function getKYC() public view returns (bool) {\n        return isKYC;\n    }\n\n    function getCustomerId(address _customer) public view returns (uint256) {\n        return customerRegistry[_customer].customerId;\n    }\n    function getCustomerDate(address _customer) public view returns (uint32) {\n        return customerRegistry[_customer].expireyDate;\n    }\n    function getCustomerAuthorization(address _customer) public view returns (bool) {\n        return customerRegistry[_customer].isAuthorized;\n    }\n}",
  "sourceMap": "142:2388:5:-;;;205:5;184:26;;-1:-1:-1;;;;184:26:5;;;718:12:3;-1:-1:-1;;;;;718:10:3;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:3;-1:-1:-1;;;;;740:18:3;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:3;773:43;;740:6;;773:43;664:159;142:2388:5;;788:96:0;867:10;788:96;:::o;142:2388:5:-;;;;;;;",
  "sourcePath": "contracts/Caller.sol",
  "type": "contract"
}