{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isKYC",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "KYCUpdatedEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "customer",
          "type": "address"
        }
      ],
      "name": "ReceivedNewRequestIdEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        }
      ],
      "name": "newOracleAddressEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_customerId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isKYC",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerAuthorization",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerDate",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "getCustomerId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "isAuthorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracleInstanceAddress",
          "type": "address"
        }
      ],
      "name": "setOracleInstanceAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customer",
          "type": "address"
        }
      ],
      "name": "updateKYC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/b.hamm/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "/Users/b.hamm/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "2": "contracts/Caller.sol",
    "3": "contracts/OracleInterface.sol"
  },
  "ast": {
    "absolutePath": "contracts/Caller.sol",
    "exportedSymbols": {
      "CallerContract": [
        236
      ],
      "Context": [
        372
      ],
      "OracleInterface": [
        350
      ],
      "Ownable": [
        340
      ]
    },
    "id": 237,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/b.hamm/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 237,
        "sourceUnit": 341,
        "src": "25:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/OracleInterface.sol",
        "file": "./OracleInterface.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 237,
        "sourceUnit": 351,
        "src": "106:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 340,
              "src": "166:7:2"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "166:7:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 236,
        "linearizedBaseContracts": [
          236,
          340,
          372
        ],
        "name": "CallerContract",
        "nameLocation": "148:14:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "isKYC",
            "nameLocation": "194:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "181:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "181:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 7,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "202:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "oracleInstance",
            "nameLocation": "237:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "213:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OracleInterface_$350",
              "typeString": "contract OracleInterface"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "OracleInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 350,
                "src": "213:15:2"
              },
              "referencedDeclaration": 350,
              "src": "213:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$350",
                "typeString": "contract OracleInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "oracleAddress",
            "nameLocation": "273:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "257:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "myRequests",
            "nameLocation": "315:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "292:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "300:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "292:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 15,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "309:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CallerContract.customer",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "customerId",
                "nameLocation": "366:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "358:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "358:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "expireyDate",
                "nameLocation": "393:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "386:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "386:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "isAuthorized",
                "nameLocation": "419:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "414:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 22,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "414:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "customer",
            "nameLocation": "339:8:2",
            "nodeType": "StructDefinition",
            "scope": 236,
            "src": "332:106:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "customerRegistry",
            "nameLocation": "474:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 236,
            "src": "444:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
              "typeString": "mapping(address => struct CallerContract.customer)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "453:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "444:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
                "typeString": "mapping(address => struct CallerContract.customer)"
              },
              "valueType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "customer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "464:8:2"
                },
                "referencedDeclaration": 24,
                "src": "464:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_customer_$24_storage_ptr",
                  "typeString": "struct CallerContract.customer"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 33,
            "name": "newOracleAddressEvent",
            "nameLocation": "504:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oracleAddress",
                  "nameLocation": "534:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "526:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:23:2"
            },
            "src": "498:51:2"
          },
          {
            "anonymous": false,
            "id": 39,
            "name": "ReceivedNewRequestIdEvent",
            "nameLocation": "560:25:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "594:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "586:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "customer",
                  "nameLocation": "606:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "598:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:30:2"
            },
            "src": "554:62:2"
          },
          {
            "anonymous": false,
            "id": 45,
            "name": "KYCUpdatedEvent",
            "nameLocation": "627:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isKYC",
                  "nameLocation": "648:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "643:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "663:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "655:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:24:2"
            },
            "src": "621:46:2"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "756:163:2",
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52,
                      "name": "oracleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "766:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53,
                      "name": "_oracleInstanceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "782:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "766:38:2"
                },
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "oracleInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "814:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$350",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 58,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "847:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 57,
                        "name": "OracleInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "831:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleInterface_$350_$",
                          "typeString": "type(contract OracleInterface)"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "831:30:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$350",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "src": "814:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleInterface_$350",
                      "typeString": "contract OracleInterface"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "814:47:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63,
                        "name": "oracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "898:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 62,
                      "name": "newOracleAddressEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "876:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "EmitStatement",
                  "src": "871:41:2"
                }
              ]
            },
            "functionSelector": "e9e17a9e",
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 50,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 283,
                  "src": "746:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "746:9:2"
              }
            ],
            "name": "setOracleInstanceAddress",
            "nameLocation": "682:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "_oracleInstanceAddress",
                  "nameLocation": "715:22:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "707:30:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "706:32:2"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:0:2"
            },
            "scope": 236,
            "src": "673:246:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "970:149:2",
              "statements": [
                {
                  "assignments": [
                    73
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "988:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 90,
                      "src": "980:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "980:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 76,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1015:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74,
                        "name": "oracleInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "993:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$350",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getKYC",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 349,
                      "src": "993:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "980:45:2"
                },
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 79,
                        "name": "myRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1035:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 81,
                      "indexExpression": {
                        "id": 80,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1046:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1035:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1052:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1035:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:21:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 86,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1098:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1102:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85,
                      "name": "ReceivedNewRequestIdEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "1072:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "EmitStatement",
                  "src": "1067:45:2"
                }
              ]
            },
            "functionSelector": "0272ee97",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateKYC",
            "nameLocation": "934:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "952:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "944:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "943:19:2"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:0:2"
            },
            "scope": 236,
            "src": "925:194:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1227:346:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 105,
                          "name": "myRequests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1245:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 107,
                        "indexExpression": {
                          "id": 106,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "1256:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1245:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1237:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1237:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1237:24:2"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1271:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 111,
                      "name": "_isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1279:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1271:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:14:2"
                },
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 114,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1295:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 116,
                        "indexExpression": {
                          "id": 115,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1312:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1295:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$24_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "customerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1295:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 118,
                      "name": "_customerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1335:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1295:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:51:2"
                },
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 121,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1356:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 123,
                        "indexExpression": {
                          "id": 122,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1373:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1356:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$24_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isAuthorized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "1356:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_isKYC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1399:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1356:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1356:49:2"
                },
                {
                  "expression": {
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 128,
                          "name": "customerRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1415:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
                            "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                          }
                        },
                        "id": 130,
                        "indexExpression": {
                          "id": 129,
                          "name": "_customer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97,
                          "src": "1432:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1415:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_customer_$24_storage",
                          "typeString": "struct CallerContract.customer storage ref"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expireyDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1415:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 134,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1464:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1464:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3532",
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1482:8:2",
                            "subdenomination": "weeks",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31449600_by_1",
                              "typeString": "int_const 31449600"
                            },
                            "value": "52"
                          },
                          "src": "1464:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1457:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1457:6:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1457:34:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1415:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:76:2"
                },
                {
                  "expression": {
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1501:22:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 141,
                        "name": "myRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1508:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 143,
                      "indexExpression": {
                        "id": 142,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1519:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1508:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:22:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 147,
                        "name": "_isKYC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "1554:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 148,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1562:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 146,
                      "name": "KYCUpdatedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1538:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "EmitStatement",
                  "src": "1533:33:2"
                }
              ]
            },
            "functionSelector": "ddef9ac0",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101,
                  "name": "onlyOracle",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 163,
                  "src": "1216:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1216:10:2"
              }
            ],
            "name": "callback",
            "nameLocation": "1134:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_customerId",
                  "nameLocation": "1151:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1143:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_isKYC",
                  "nameLocation": "1169:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1164:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "1185:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1177:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1204:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1196:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1142:66:2"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:0:2"
            },
            "scope": 236,
            "src": "1125:448:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1601:64:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 155,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1619:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1619:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 157,
                          "name": "oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1633:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1619:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1611:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:36:2"
                },
                {
                  "id": 161,
                  "nodeType": "PlaceholderStatement",
                  "src": "1657:1:2"
                }
              ]
            },
            "id": 163,
            "name": "onlyOracle",
            "nameLocation": "1588:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1598:2:2"
            },
            "src": "1579:86:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "1741:64:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 170,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1758:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 172,
                      "indexExpression": {
                        "id": 171,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1775:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1758:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$24_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isAuthorized",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 23,
                    "src": "1758:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 169,
                  "id": 174,
                  "nodeType": "Return",
                  "src": "1751:47:2"
                }
              ]
            },
            "id": 176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAuthorized",
            "nameLocation": "1679:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "1701:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1693:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:19:2"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "1735:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1735:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1734:6:2"
            },
            "scope": 236,
            "src": "1670:135:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "1878:48:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 184,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "1909:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 183,
                      "name": "_isAuthorized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "1895:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 182,
                  "id": 186,
                  "nodeType": "Return",
                  "src": "1888:31:2"
                }
              ]
            },
            "functionSelector": "fe9fbb80",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorized",
            "nameLocation": "1820:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "1841:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1833:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1833:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1832:19:2"
            },
            "returnParameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "1872:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:6:2"
            },
            "scope": 236,
            "src": "1811:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "1990:37:2",
              "statements": [
                {
                  "expression": {
                    "id": 193,
                    "name": "oracleAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "2007:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 192,
                  "id": 194,
                  "nodeType": "Return",
                  "src": "2000:20:2"
                }
              ]
            },
            "functionSelector": "b18b78dd",
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracleAddress",
            "nameLocation": "1941:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1957:2:2"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "1981:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:9:2"
            },
            "scope": 236,
            "src": "1932:95:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2105:62:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 203,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2122:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 205,
                      "indexExpression": {
                        "id": 204,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2139:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2122:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$24_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "customerId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 19,
                    "src": "2122:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 202,
                  "id": 207,
                  "nodeType": "Return",
                  "src": "2115:45:2"
                }
              ]
            },
            "functionSelector": "3a521b87",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerId",
            "nameLocation": "2042:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "2064:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2056:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2055:19:2"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2096:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:9:2"
            },
            "scope": 236,
            "src": "2033:134:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "2245:63:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 216,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2262:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 218,
                      "indexExpression": {
                        "id": 217,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2279:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2262:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$24_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "expireyDate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21,
                    "src": "2262:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 220,
                  "nodeType": "Return",
                  "src": "2255:46:2"
                }
              ]
            },
            "functionSelector": "c944d2ca",
            "id": 222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerDate",
            "nameLocation": "2181:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "2205:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "2197:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2197:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2196:19:2"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "2237:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2236:8:2"
            },
            "scope": 236,
            "src": "2172:136:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "2393:64:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 229,
                        "name": "customerRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2410:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$24_storage_$",
                          "typeString": "mapping(address => struct CallerContract.customer storage ref)"
                        }
                      },
                      "id": 231,
                      "indexExpression": {
                        "id": 230,
                        "name": "_customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "2427:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2410:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$24_storage",
                        "typeString": "struct CallerContract.customer storage ref"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isAuthorized",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 23,
                    "src": "2410:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 228,
                  "id": 233,
                  "nodeType": "Return",
                  "src": "2403:47:2"
                }
              ]
            },
            "functionSelector": "650314d6",
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustomerAuthorization",
            "nameLocation": "2322:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "_customer",
                  "nameLocation": "2355:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2347:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2346:19:2"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "2387:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:6:2"
            },
            "scope": 236,
            "src": "2313:144:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 237,
        "src": "139:2320:2",
        "usedErrors": []
      }
    ],
    "src": "0:2459:2"
  },
  "bytecode": "60806040526000805460ff60a01b1916905534801561001d57600080fd5b506100273361002c565b61007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106f08061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b18b78dd11610071578063b18b78dd14610173578063c944d2ca14610184578063ddef9ac0146101cb578063e9e17a9e146101de578063f2fde38b146101f1578063fe9fbb80146100ff57600080fd5b80630272ee97146100ae5780633a521b87146100c3578063650314d6146100ff578063715018a6146101465780638da5cb5b1461014e575b600080fd5b6100c16100bc3660046105d9565b610204565b005b6100ec6100d13660046105d9565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b61013661010d3660046105d9565b6001600160a01b0316600090815260046020526040902060010154640100000000900460ff1690565b60405190151581526020016100f6565b6100c16102f0565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100f6565b6002546001600160a01b031661015b565b6101b66101923660046105d9565b6001600160a01b031660009081526004602052604090206001015463ffffffff1690565b60405163ffffffff90911681526020016100f6565b6100c16101d9366004610614565b61032f565b6100c16101ec3660046105d9565b610448565b6100c16101ff3660046105d9565b6104d2565b600154604051634d1a687d60e01b81526001600160a01b0383811660048301526000921690634d1a687d90602401602060405180830381600087803b15801561024c57600080fd5b505af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906105fb565b60008181526003602052604090819020805460ff19166001179055519091507f023f92af5f59336c90c38c89410acf21801e112289cf776fbe3dfa7f300dbff7906102e490839085909182526001600160a01b0316602082015260400190565b60405180910390a15050565b6000546001600160a01b031633146103235760405162461bcd60e51b815260040161031a9061065f565b60405180910390fd5b61032d600061056d565b565b6002546001600160a01b0316331461034657600080fd5b60008181526003602052604090205460ff1661036157600080fd5b6000805460ff60a01b1916600160a01b8515159081029190911782556001600160a01b038416825260046020526040909120858155600101805464ff0000000019166401000000009092029190911790556103c0426301dfe200610694565b6001600160a01b0383166000908152600460209081526040808320600101805463ffffffff191663ffffffff95909516949094179093558382526003815290829020805460ff19169055815185151581529081018390527fbf59b978135d33813ee8e3ded58396d9328c70d082d236f1bf1db922a392c4aa910160405180910390a150505050565b6000546001600160a01b031633146104725760405162461bcd60e51b815260040161031a9061065f565b600280546001600160a01b0383166001600160a01b0319918216811790925560018054909116821790556040519081527f441e3b056b114797955165bd03bb8393fc1658a713f09225de4745a8d068bf7d9060200160405180910390a150565b6000546001600160a01b031633146104fc5760405162461bcd60e51b815260040161031a9061065f565b6001600160a01b0381166105615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161031a565b61056a8161056d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105d457600080fd5b919050565b6000602082840312156105eb57600080fd5b6105f4826105bd565b9392505050565b60006020828403121561060d57600080fd5b5051919050565b6000806000806080858703121561062a57600080fd5b843593506020850135801515811461064157600080fd5b925061064f604086016105bd565b9396929550929360600135925050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156106b557634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122054b25af33e5ab1110ae7a52c83989b148efe98fae7e3c77dd864d5dcbef63c8264736f6c63430008070033",
  "bytecodeSha1": "42d086b4c6eff40690dac7930d44ff24e381cb88",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "CallerContract",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "24": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "CallerContract.callback": {
          "23": [
            1245,
            1260,
            true
          ]
        }
      },
      "3": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "21": [
            2131,
            2148
          ],
          "22": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "2": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "8": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "19": [
            1926,
            1999
          ],
          "20": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "7": [
            659,
            676
          ]
        }
      },
      "2": {
        "CallerContract.callback": {
          "9": [
            1237,
            1261
          ],
          "10": [
            1271,
            1285
          ],
          "11": [
            1295,
            1346
          ],
          "12": [
            1356,
            1405
          ],
          "13": [
            1415,
            1491
          ],
          "14": [
            1501,
            1523
          ],
          "15": [
            1533,
            1566
          ]
        },
        "CallerContract.getCustomerAuthorization": {
          "1": [
            2403,
            2450
          ]
        },
        "CallerContract.getCustomerDate": {
          "4": [
            2255,
            2301
          ]
        },
        "CallerContract.getCustomerId": {
          "0": [
            2115,
            2160
          ]
        },
        "CallerContract.getOracleAddress": {
          "3": [
            2000,
            2020
          ]
        },
        "CallerContract.setOracleInstanceAddress": {
          "16": [
            766,
            804
          ],
          "17": [
            814,
            861
          ],
          "18": [
            871,
            912
          ]
        },
        "CallerContract.updateKYC": {
          "5": [
            1035,
            1056
          ],
          "6": [
            1067,
            1112
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OracleInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b18b78dd11610071578063b18b78dd14610173578063c944d2ca14610184578063ddef9ac0146101cb578063e9e17a9e146101de578063f2fde38b146101f1578063fe9fbb80146100ff57600080fd5b80630272ee97146100ae5780633a521b87146100c3578063650314d6146100ff578063715018a6146101465780638da5cb5b1461014e575b600080fd5b6100c16100bc3660046105d9565b610204565b005b6100ec6100d13660046105d9565b6001600160a01b031660009081526004602052604090205490565b6040519081526020015b60405180910390f35b61013661010d3660046105d9565b6001600160a01b0316600090815260046020526040902060010154640100000000900460ff1690565b60405190151581526020016100f6565b6100c16102f0565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100f6565b6002546001600160a01b031661015b565b6101b66101923660046105d9565b6001600160a01b031660009081526004602052604090206001015463ffffffff1690565b60405163ffffffff90911681526020016100f6565b6100c16101d9366004610614565b61032f565b6100c16101ec3660046105d9565b610448565b6100c16101ff3660046105d9565b6104d2565b600154604051634d1a687d60e01b81526001600160a01b0383811660048301526000921690634d1a687d90602401602060405180830381600087803b15801561024c57600080fd5b505af1158015610260573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028491906105fb565b60008181526003602052604090819020805460ff19166001179055519091507f023f92af5f59336c90c38c89410acf21801e112289cf776fbe3dfa7f300dbff7906102e490839085909182526001600160a01b0316602082015260400190565b60405180910390a15050565b6000546001600160a01b031633146103235760405162461bcd60e51b815260040161031a9061065f565b60405180910390fd5b61032d600061056d565b565b6002546001600160a01b0316331461034657600080fd5b60008181526003602052604090205460ff1661036157600080fd5b6000805460ff60a01b1916600160a01b8515159081029190911782556001600160a01b038416825260046020526040909120858155600101805464ff0000000019166401000000009092029190911790556103c0426301dfe200610694565b6001600160a01b0383166000908152600460209081526040808320600101805463ffffffff191663ffffffff95909516949094179093558382526003815290829020805460ff19169055815185151581529081018390527fbf59b978135d33813ee8e3ded58396d9328c70d082d236f1bf1db922a392c4aa910160405180910390a150505050565b6000546001600160a01b031633146104725760405162461bcd60e51b815260040161031a9061065f565b600280546001600160a01b0383166001600160a01b0319918216811790925560018054909116821790556040519081527f441e3b056b114797955165bd03bb8393fc1658a713f09225de4745a8d068bf7d9060200160405180910390a150565b6000546001600160a01b031633146104fc5760405162461bcd60e51b815260040161031a9061065f565b6001600160a01b0381166105615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161031a565b61056a8161056d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105d457600080fd5b919050565b6000602082840312156105eb57600080fd5b6105f4826105bd565b9392505050565b60006020828403121561060d57600080fd5b5051919050565b6000806000806080858703121561062a57600080fd5b843593506020850135801515811461064157600080fd5b925061064f604086016105bd565b9396929550929360600135925050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156106b557634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122054b25af33e5ab1110ae7a52c83989b148efe98fae7e3c77dd864d5dcbef63c8264736f6c63430008070033",
  "deployedSourceMap": "139:2320:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:194;;;;;;:::i;:::-;;:::i;:::-;;2033:134;;;;;;:::i;:::-;-1:-1:-1;;;;;2122:27:2;2096:7;2122:27;;;:16;:27;;;;;:38;;2033:134;;;;2638:25:4;;;2626:2;2611:18;2033:134:2;;;;;;;;2313:144;;;;;;:::i;:::-;-1:-1:-1;;;;;2410:27:2;2387:4;2410:27;;;:16;:27;;;;;:40;;;;;;;;;2313:144;;;;1434:14:4;;1427:22;1409:41;;1397:2;1382:18;2313:144:2;1269:187:4;1605:92:0;;;:::i;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;;-1:-1:-1;;;;;1225:32:4;;;1207:51;;1195:2;1180:18;973:85:0;1061:203:4;1932:95:2;2007:13;;-1:-1:-1;;;;;2007:13:2;1932:95;;2172:136;;;;;;:::i;:::-;-1:-1:-1;;;;;2262:27:2;2237:6;2262:27;;;:16;:27;;;;;:39;;;;;;2172:136;;;;3127:10:4;3115:23;;;3097:42;;3085:2;3070:18;2172:136:2;2953:192:4;1125:448:2;;;;;;:::i;:::-;;:::i;673:246::-;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;925:194:2:-;993:14;;:32;;-1:-1:-1;;;993:32:2;;-1:-1:-1;;;;;1225:32:4;;;993::2;;;1207:51:4;980:10:2;;993:14;;:21;;1180:18:4;;993:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1035:14;;;;:10;:14;;;;;;;:21;;-1:-1:-1;;1035:21:2;1052:4;1035:21;;;1072:40;980:45;;-1:-1:-1;1072:40:2;;;;980:45;;1102:9;;2848:25:4;;;-1:-1:-1;;;;;2909:32:4;2904:2;2889:18;;2882:60;2836:2;2821:18;;2674:274;1072:40:2;;;;;;;;970:149;925:194;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;1125:448:2:-;1633:13;;-1:-1:-1;;;;;1633:13:2;1619:10;:27;1611:36;;;;;;1245:15:::1;::::0;;;:10:::1;:15;::::0;;;;;::::1;;1237:24;;;::::0;::::1;;1271:5;:14:::0;;-1:-1:-1;;;;1271:14:2::1;-1:-1:-1::0;;;1271:14:2;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;1295:27:2;::::1;::::0;;:16:::1;:27;::::0;;;;;:51;;;-1:-1:-1;1356:40:2::1;:49:::0;;-1:-1:-1;;1356:49:2::1;::::0;;;::::1;::::0;;;::::1;::::0;;1464:26:::1;:15;1482:8;1464:26;:::i;:::-;-1:-1:-1::0;;;;;1415:27:2;::::1;;::::0;;;:16:::1;:27;::::0;;;;;;;:39:::1;;:76:::0;;-1:-1:-1;;1415:76:2::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;1508:15;;;:10:::1;:15:::0;;;;;;1501:22;;-1:-1:-1;;1501:22:2::1;::::0;;1538:28;;1654:14:4;;1647:22;1629:41;;1686:18;;;1679:34;;;1538:28:2::1;::::0;1602:18:4;1538:28:2::1;;;;;;;1125:448:::0;;;;:::o;673:246::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;766:13:2::1;:38:::0;;-1:-1:-1;;;;;766:38:2;::::1;-1:-1:-1::0;;;;;;766:38:2;;::::1;::::0;::::1;::::0;;;-1:-1:-1;814:47:2;;;;::::1;::::0;::::1;::::0;;876:36:::1;::::0;1207:51:4;;;876:36:2::1;::::0;1195:2:4;1180:18;876:36:2::1;;;;;;;673:246:::0;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;:2:4;:73:0::1;::::0;::::1;1908:21:4::0;1965:2;1945:18;;;1938:30;2004:34;1984:18;;;1977:62;-1:-1:-1;;;2055:18:4;;;2048:36;2101:19;;1926:73:0::1;1724:402:4::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:4:o;383:184::-;453:6;506:2;494:9;485:7;481:23;477:32;474:52;;;522:1;519;512:12;474:52;-1:-1:-1;545:16:4;;383:184;-1:-1:-1;383:184:4:o;572:484::-;655:6;663;671;679;732:3;720:9;711:7;707:23;703:33;700:53;;;749:1;746;739:12;700:53;785:9;772:23;762:33;;845:2;834:9;830:18;817:32;892:5;885:13;878:21;871:5;868:32;858:60;;914:1;911;904:12;858:60;937:5;-1:-1:-1;961:38:4;995:2;980:18;;961:38;:::i;:::-;572:484;;;;-1:-1:-1;951:48:4;;1046:2;1031:18;1018:32;;-1:-1:-1;;572:484:4:o;2131:356::-;2333:2;2315:21;;;2352:18;;;2345:30;2411:34;2406:2;2391:18;;2384:62;2478:2;2463:18;;2131:356::o;3150:225::-;3190:3;3221:1;3217:6;3214:1;3211:13;3208:136;;;3266:10;3261:3;3257:20;3254:1;3247:31;3301:4;3298:1;3291:15;3329:4;3326:1;3319:15;3208:136;-1:-1:-1;3360:9:4;;3150:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    139,
    2459
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB18B78DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB18B78DD EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xC944D2CA EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xDDEF9AC0 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xE9E17A9E EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x272EE97 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x3A521B87 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x650314D6 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15B JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x448 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4D1A687D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x4D1A687D SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP PUSH32 0x23F92AF5F59336C90C38C89410ACF21801E112289CF776FBE3DFA7F300DBFF7 SWAP1 PUSH2 0x2E4 SWAP1 DUP4 SWAP1 DUP6 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x323 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32D PUSH1 0x0 PUSH2 0x56D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP6 ISZERO ISZERO SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP6 DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH5 0x100000000 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x3C0 TIMESTAMP PUSH4 0x1DFE200 PUSH2 0x694 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP4 DUP3 MSTORE PUSH1 0x3 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD DUP6 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xBF59B978135D33813EE8E3DED58396D9328C70D082D236F1BF1DB922A392C4AA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x441E3B056B114797955165BD03BB8393FC1658A713F09225DE4745A8D068BF7D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31A SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x31A JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x56D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F4 DUP3 PUSH2 0x5BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x64F PUSH1 0x40 DUP7 ADD PUSH2 0x5BD JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xB2 GAS RETURN RETURNDATACOPY GAS 0xB1 GT EXP 0xE7 0xA5 0x2C DUP4 SWAP9 SWAP12 EQ DUP15 INVALID SWAP9 STATICCALL 0xE7 0xE3 0xC7 PUSH30 0xD864D5DCBEF63C8264736F6C634300080700330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB18B78DD"
    },
    "38": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB18B78DD"
    },
    "49": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x173"
    },
    "53": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC944D2CA"
    },
    "60": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x184"
    },
    "64": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDDEF9AC0"
    },
    "71": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB"
    },
    "75": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE9E17A9E"
    },
    "82": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "86": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F1"
    },
    "97": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFE9FBB80"
    },
    "104": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF"
    },
    "108": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "REVERT",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x272EE97"
    },
    "120": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3A521B87"
    },
    "131": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x650314D6"
    },
    "142": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF"
    },
    "146": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "153": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146"
    },
    "157": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "164": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "EQ",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E"
    },
    "168": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        139,
        2459
      ],
      "op": "REVERT",
      "path": "2"
    },
    "174": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "175": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1"
    },
    "178": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC"
    },
    "181": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "182": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "184": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D9"
    },
    "187": {
      "fn": "CallerContract.updateKYC",
      "jump": "i",
      "offset": [
        925,
        1119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "188": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "189": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x204"
    },
    "192": {
      "fn": "CallerContract.updateKYC",
      "jump": "i",
      "offset": [
        925,
        1119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "193": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "194": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "STOP",
      "path": "2"
    },
    "195": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "196": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEC"
    },
    "199": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1"
    },
    "202": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "203": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "205": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D9"
    },
    "208": {
      "fn": "CallerContract.getCustomerId",
      "jump": "i",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "209": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "AND",
      "path": "2",
      "statement": 0
    },
    "219": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2096,
        2103
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "221": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "222": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "DUP2",
      "path": "2"
    },
    "223": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "224": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "226": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "228": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "229": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "231": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "232": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2149
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "233": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2160
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "234": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2122,
        2160
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "235": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "236": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "237": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "239": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "240": {
      "op": "SWAP1"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "247": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "249": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "250": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "DUP1",
      "path": "2"
    },
    "251": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "252": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "SUB",
      "path": "2"
    },
    "253": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "254": {
      "fn": "CallerContract.getCustomerId",
      "offset": [
        2033,
        2167
      ],
      "op": "RETURN",
      "path": "2"
    },
    "255": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "256": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "259": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D"
    },
    "262": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "263": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "265": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D9"
    },
    "268": {
      "fn": "CallerContract.getCustomerAuthorization",
      "jump": "i",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMP",
      "path": "2"
    },
    "269": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "276": {
      "op": "SHL"
    },
    "277": {
      "op": "SUB"
    },
    "278": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "AND",
      "path": "2",
      "statement": 1
    },
    "279": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2387,
        2391
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "281": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "282": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "DUP2",
      "path": "2"
    },
    "283": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "284": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "286": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "288": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "289": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "291": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "292": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2437
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "293": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "295": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "ADD",
      "path": "2"
    },
    "296": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "297": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0x100000000"
    },
    "303": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "304": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "DIV",
      "path": "2"
    },
    "305": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "307": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "AND",
      "path": "2"
    },
    "308": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "309": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMP",
      "path": "2"
    },
    "310": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "311": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "313": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "314": {
      "op": "SWAP1"
    },
    "315": {
      "op": "ISZERO"
    },
    "316": {
      "op": "ISZERO"
    },
    "317": {
      "op": "DUP2"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "fn": "CallerContract.getCustomerAuthorization",
      "offset": [
        2313,
        2457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF6"
    },
    "325": {
      "op": "JUMP"
    },
    "326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "330": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F0"
    },
    "333": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "334": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "335": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "337": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "344": {
      "op": "SHL"
    },
    "345": {
      "op": "SUB"
    },
    "346": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "347": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "350": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "357": {
      "op": "SHL"
    },
    "358": {
      "op": "SUB"
    },
    "359": {
      "op": "SWAP1"
    },
    "360": {
      "op": "SWAP2"
    },
    "361": {
      "op": "AND"
    },
    "362": {
      "op": "DUP2"
    },
    "363": {
      "op": "MSTORE"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "366": {
      "op": "ADD"
    },
    "367": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6"
    },
    "370": {
      "op": "JUMP"
    },
    "371": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1932,
        2027
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "372": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        2007,
        2020
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x2"
    },
    "374": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        2007,
        2020
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "381": {
      "op": "SHL"
    },
    "382": {
      "op": "SUB"
    },
    "383": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        2007,
        2020
      ],
      "op": "AND",
      "path": "2"
    },
    "384": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1932,
        2027
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B"
    },
    "387": {
      "fn": "CallerContract.getOracleAddress",
      "offset": [
        1932,
        2027
      ],
      "op": "JUMP",
      "path": "2"
    },
    "388": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "389": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6"
    },
    "392": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x192"
    },
    "395": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "396": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "398": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D9"
    },
    "401": {
      "fn": "CallerContract.getCustomerDate",
      "jump": "i",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMP",
      "path": "2"
    },
    "402": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "409": {
      "op": "SHL"
    },
    "410": {
      "op": "SUB"
    },
    "411": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "AND",
      "path": "2",
      "statement": 4
    },
    "412": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2237,
        2243
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "414": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "415": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "416": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "417": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "419": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "421": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "422": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "424": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "425": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2289
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "426": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "428": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "ADD",
      "path": "2"
    },
    "429": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "430": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "435": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "AND",
      "path": "2"
    },
    "436": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2262,
        2301
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "437": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMP",
      "path": "2"
    },
    "438": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "439": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "441": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "442": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "447": {
      "op": "SWAP1"
    },
    "448": {
      "op": "SWAP2"
    },
    "449": {
      "op": "AND"
    },
    "450": {
      "op": "DUP2"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "fn": "CallerContract.getCustomerDate",
      "offset": [
        2172,
        2308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF6"
    },
    "458": {
      "op": "JUMP"
    },
    "459": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "460": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1"
    },
    "463": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9"
    },
    "466": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "467": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "469": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x614"
    },
    "472": {
      "fn": "CallerContract.callback",
      "jump": "i",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMP",
      "path": "2"
    },
    "473": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "474": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32F"
    },
    "477": {
      "fn": "CallerContract.callback",
      "jump": "i",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMP",
      "path": "2"
    },
    "478": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "479": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1"
    },
    "482": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC"
    },
    "485": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "486": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "488": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D9"
    },
    "491": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "jump": "i",
      "offset": [
        673,
        919
      ],
      "op": "JUMP",
      "path": "2"
    },
    "492": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "493": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x448"
    },
    "496": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "jump": "i",
      "offset": [
        673,
        919
      ],
      "op": "JUMP",
      "path": "2"
    },
    "497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "501": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "507": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D9"
    },
    "510": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "511": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D2"
    },
    "515": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "516": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "517": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "519": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1007
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "520": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "522": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "523": {
      "op": "PUSH4",
      "value": "0x4D1A687D"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "532": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "539": {
      "op": "SHL"
    },
    "540": {
      "op": "SUB"
    },
    "541": {
      "op": "DUP4"
    },
    "542": {
      "op": "DUP2"
    },
    "543": {
      "op": "AND"
    },
    "544": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "546": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP4",
      "path": "2"
    },
    "547": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ADD",
      "path": "2"
    },
    "548": {
      "op": "MSTORE"
    },
    "549": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "551": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        990
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "552": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1007
      ],
      "op": "AND",
      "path": "2"
    },
    "553": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1007
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "554": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1014
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4D1A687D"
    },
    "559": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1014
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "562": {
      "op": "ADD"
    },
    "563": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "565": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "567": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "568": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "569": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP4",
      "path": "2"
    },
    "570": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "SUB",
      "path": "2"
    },
    "571": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "572": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "574": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP8",
      "path": "2"
    },
    "575": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "576": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "577": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "578": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "579": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "580": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24C"
    },
    "583": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "584": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "586": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "587": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "REVERT",
      "path": "2"
    },
    "588": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "589": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "2"
    },
    "590": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "GAS",
      "path": "2"
    },
    "591": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "CALL",
      "path": "2"
    },
    "592": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "593": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "594": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "595": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260"
    },
    "598": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "599": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "600": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "602": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "603": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "604": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "605": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "607": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "REVERT",
      "path": "2"
    },
    "608": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "609": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "2"
    },
    "610": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "2"
    },
    "611": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "2"
    },
    "612": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "2"
    },
    "613": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "615": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "616": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "617": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "619": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "NOT",
      "path": "2"
    },
    "620": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "622": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP3",
      "path": "2"
    },
    "623": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ADD",
      "path": "2"
    },
    "624": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "AND",
      "path": "2"
    },
    "625": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP3",
      "path": "2"
    },
    "626": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ADD",
      "path": "2"
    },
    "627": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "628": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "630": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "631": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "POP",
      "path": "2"
    },
    "632": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "633": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "ADD",
      "path": "2"
    },
    "634": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "635": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284"
    },
    "638": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "639": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "640": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FB"
    },
    "643": {
      "fn": "CallerContract.updateKYC",
      "jump": "i",
      "offset": [
        993,
        1025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "644": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        993,
        1025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "645": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x0"
    },
    "647": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "648": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "649": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "650": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1045
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "652": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "654": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "655": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "657": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "658": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "659": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "660": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1049
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "661": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "DUP1",
      "path": "2"
    },
    "662": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "663": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "665": {
      "op": "NOT"
    },
    "666": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "AND",
      "path": "2"
    },
    "667": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1052,
        1056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "669": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "OR",
      "path": "2"
    },
    "670": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "671": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1035,
        1056
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "672": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 6
    },
    "673": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        1025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "674": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        1025
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "675": {
      "op": "POP"
    },
    "676": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x23F92AF5F59336C90C38C89410ACF21801E112289CF776FBE3DFA7F300DBFF7"
    },
    "709": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "710": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E4"
    },
    "713": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "714": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        1025
      ],
      "op": "DUP4",
      "path": "2"
    },
    "715": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        980,
        1025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "716": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1102,
        1111
      ],
      "op": "DUP6",
      "path": "2"
    },
    "717": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1102,
        1111
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "718": {
      "op": "SWAP2"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "MSTORE"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "op": "SUB"
    },
    "729": {
      "op": "AND"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "732": {
      "op": "DUP3"
    },
    "733": {
      "op": "ADD"
    },
    "734": {
      "op": "MSTORE"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "737": {
      "op": "ADD"
    },
    "738": {
      "op": "SWAP1"
    },
    "739": {
      "op": "JUMP"
    },
    "740": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "741": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "743": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "744": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "745": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "746": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SUB",
      "path": "2"
    },
    "747": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "748": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        1072,
        1112
      ],
      "op": "LOG1",
      "path": "2"
    },
    "749": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        970,
        1119
      ],
      "op": "POP",
      "path": "2"
    },
    "750": {
      "fn": "CallerContract.updateKYC",
      "offset": [
        925,
        1119
      ],
      "op": "POP",
      "path": "2"
    },
    "751": {
      "fn": "CallerContract.updateKYC",
      "jump": "o",
      "offset": [
        925,
        1119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "753": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "755": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "762": {
      "op": "SHL"
    },
    "763": {
      "op": "SUB"
    },
    "764": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "765": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 7
    },
    "766": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "767": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x323"
    },
    "770": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "771": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "773": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "774": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "778": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "780": {
      "op": "SHL"
    },
    "781": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "782": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "783": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "785": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "786": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31A"
    },
    "789": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "790": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65F"
    },
    "793": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "794": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "795": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "797": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "798": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "799": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "800": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "801": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "802": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "803": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x32D"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "809": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56D"
    },
    "812": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "813": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "814": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "815": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "816": {
      "offset": [
        1633,
        1646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "818": {
      "fn": "CallerContract.callback",
      "offset": [
        1633,
        1646
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "825": {
      "op": "SHL"
    },
    "826": {
      "op": "SUB"
    },
    "827": {
      "offset": [
        1633,
        1646
      ],
      "op": "AND",
      "path": "2"
    },
    "828": {
      "offset": [
        1619,
        1629
      ],
      "op": "CALLER",
      "path": "2"
    },
    "829": {
      "offset": [
        1619,
        1646
      ],
      "op": "EQ",
      "path": "2"
    },
    "830": {
      "offset": [
        1611,
        1647
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x346"
    },
    "833": {
      "offset": [
        1611,
        1647
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "834": {
      "fn": "CallerContract.callback",
      "offset": [
        1611,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "836": {
      "fn": "CallerContract.callback",
      "offset": [
        1611,
        1647
      ],
      "op": "DUP1",
      "path": "2"
    },
    "837": {
      "fn": "CallerContract.callback",
      "offset": [
        1611,
        1647
      ],
      "op": "REVERT",
      "path": "2"
    },
    "838": {
      "fn": "CallerContract.callback",
      "offset": [
        1611,
        1647
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "839": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x0"
    },
    "841": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "842": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "DUP2",
      "path": "2"
    },
    "843": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "844": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "846": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "848": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "849": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "851": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "852": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "853": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "854": {
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "856": {
      "branch": 23,
      "fn": "CallerContract.callback",
      "offset": [
        1245,
        1260
      ],
      "op": "AND",
      "path": "2"
    },
    "857": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x361"
    },
    "860": {
      "branch": 23,
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "861": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "863": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "DUP1",
      "path": "2"
    },
    "864": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "REVERT",
      "path": "2"
    },
    "865": {
      "fn": "CallerContract.callback",
      "offset": [
        1237,
        1261
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "866": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1276
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x0"
    },
    "868": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "DUP1",
      "path": "2"
    },
    "869": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "870": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "874": {
      "op": "SHL"
    },
    "875": {
      "op": "NOT"
    },
    "876": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "AND",
      "path": "2"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "881": {
      "op": "SHL"
    },
    "882": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "DUP6",
      "path": "2"
    },
    "883": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "884": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "885": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "886": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "887": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "MUL",
      "path": "2"
    },
    "888": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "889": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "890": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "891": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "OR",
      "path": "2"
    },
    "892": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "DUP3",
      "path": "2"
    },
    "893": {
      "fn": "CallerContract.callback",
      "offset": [
        1271,
        1285
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 11
    },
    "903": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "AND",
      "path": "2"
    },
    "904": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "905": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "906": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "908": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "910": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "911": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "913": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "914": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "915": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1322
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "916": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1346
      ],
      "op": "DUP6",
      "path": "2"
    },
    "917": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1346
      ],
      "op": "DUP2",
      "path": "2"
    },
    "918": {
      "fn": "CallerContract.callback",
      "offset": [
        1295,
        1346
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1396
      ],
      "op": "ADD",
      "path": "2",
      "statement": 12
    },
    "922": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "DUP1",
      "path": "2"
    },
    "923": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "924": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "930": {
      "op": "NOT"
    },
    "931": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "AND",
      "path": "2"
    },
    "932": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0x100000000"
    },
    "938": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "939": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "940": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "MUL",
      "path": "2"
    },
    "941": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "942": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "943": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "944": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "OR",
      "path": "2"
    },
    "945": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "946": {
      "fn": "CallerContract.callback",
      "offset": [
        1356,
        1405
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "947": {
      "fn": "CallerContract.callback",
      "offset": [
        1464,
        1490
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x3C0"
    },
    "950": {
      "fn": "CallerContract.callback",
      "offset": [
        1464,
        1479
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "951": {
      "fn": "CallerContract.callback",
      "offset": [
        1482,
        1490
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1DFE200"
    },
    "956": {
      "fn": "CallerContract.callback",
      "offset": [
        1464,
        1490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x694"
    },
    "959": {
      "fn": "CallerContract.callback",
      "jump": "i",
      "offset": [
        1464,
        1490
      ],
      "op": "JUMP",
      "path": "2"
    },
    "960": {
      "fn": "CallerContract.callback",
      "offset": [
        1464,
        1490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "op": "SUB"
    },
    "969": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP4",
      "path": "2"
    },
    "970": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "AND",
      "path": "2"
    },
    "971": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "973": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "974": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP2",
      "path": "2"
    },
    "975": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "976": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1431
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "978": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "980": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "981": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP2",
      "path": "2"
    },
    "982": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "983": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "985": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP1",
      "path": "2"
    },
    "986": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "DUP4",
      "path": "2"
    },
    "987": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1442
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "988": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "990": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1454
      ],
      "op": "ADD",
      "path": "2"
    },
    "991": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "992": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "993": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "998": {
      "op": "NOT"
    },
    "999": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "AND",
      "path": "2"
    },
    "1000": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1005": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "1006": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1007": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "1008": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "AND",
      "path": "2"
    },
    "1009": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1010": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1011": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1012": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "OR",
      "path": "2"
    },
    "1013": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1014": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1015": {
      "fn": "CallerContract.callback",
      "offset": [
        1415,
        1491
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1016": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 14
    },
    "1017": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1018": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1019": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1021": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1022": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1023": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1024": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1025": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1026": {
      "fn": "CallerContract.callback",
      "offset": [
        1508,
        1523
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1027": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1028": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1031": {
      "op": "NOT"
    },
    "1032": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "AND",
      "path": "2"
    },
    "1033": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1034": {
      "fn": "CallerContract.callback",
      "offset": [
        1501,
        1523
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1035": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 15
    },
    "1036": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1037": {
      "op": "DUP6"
    },
    "1038": {
      "op": "ISZERO"
    },
    "1039": {
      "op": "ISZERO"
    },
    "1040": {
      "op": "DUP2"
    },
    "1041": {
      "op": "MSTORE"
    },
    "1042": {
      "op": "SWAP1"
    },
    "1043": {
      "op": "DUP2"
    },
    "1044": {
      "op": "ADD"
    },
    "1045": {
      "op": "DUP4"
    },
    "1046": {
      "op": "SWAP1"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xBF59B978135D33813EE8E3DED58396D9328C70D082D236F1BF1DB922A392C4AA"
    },
    "1081": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1085": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1086": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1087": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1088": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "SUB",
      "path": "2"
    },
    "1089": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1090": {
      "fn": "CallerContract.callback",
      "offset": [
        1538,
        1566
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1091": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "POP",
      "path": "2"
    },
    "1092": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "POP",
      "path": "2"
    },
    "1093": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "POP",
      "path": "2"
    },
    "1094": {
      "fn": "CallerContract.callback",
      "offset": [
        1125,
        1573
      ],
      "op": "POP",
      "path": "2"
    },
    "1095": {
      "fn": "CallerContract.callback",
      "jump": "o",
      "offset": [
        1125,
        1573
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1096": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1097": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1099": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1106": {
      "op": "SHL"
    },
    "1107": {
      "op": "SUB"
    },
    "1108": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1109": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1110": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1111": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x472"
    },
    "1114": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1115": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1117": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1124": {
      "op": "SHL"
    },
    "1125": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1126": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1127": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1129": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1130": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31A"
    },
    "1133": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1134": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65F"
    },
    "1137": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1138": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1139": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        779
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x2"
    },
    "1141": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1142": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1149": {
      "op": "SHL"
    },
    "1150": {
      "op": "SUB"
    },
    "1151": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1152": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "AND",
      "path": "2"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "op": "SUB"
    },
    "1161": {
      "op": "NOT"
    },
    "1162": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1163": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1164": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "AND",
      "path": "2"
    },
    "1165": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1166": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "OR",
      "path": "2"
    },
    "1167": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1168": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1169": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        766,
        804
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 17
    },
    "1173": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1174": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1175": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1176": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "AND",
      "path": "2"
    },
    "1177": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1178": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "OR",
      "path": "2"
    },
    "1179": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1180": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        814,
        861
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1181": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x40"
    },
    "1183": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1184": {
      "op": "SWAP1"
    },
    "1185": {
      "op": "DUP2"
    },
    "1186": {
      "op": "MSTORE"
    },
    "1187": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x441E3B056B114797955165BD03BB8393FC1658A713F09225DE4745A8D068BF7D"
    },
    "1220": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1226": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1227": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1228": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1229": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "SUB",
      "path": "2"
    },
    "1230": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1231": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        876,
        912
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1232": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "offset": [
        673,
        919
      ],
      "op": "POP",
      "path": "2"
    },
    "1233": {
      "fn": "CallerContract.setOracleInstanceAddress",
      "jump": "o",
      "offset": [
        673,
        919
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1235": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1237": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1247": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1248": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1249": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FC"
    },
    "1252": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1253": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1255": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1262": {
      "op": "SHL"
    },
    "1263": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1264": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1265": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1267": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1268": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31A"
    },
    "1271": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65F"
    },
    "1275": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1276": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1283": {
      "op": "SHL"
    },
    "1284": {
      "op": "SUB"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1286": {
      "branch": 24,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "1287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x561"
    },
    "1290": {
      "branch": 24,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1291": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1293": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1302": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1307": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1308": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "1309": {
      "op": "MSTORE"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1314": {
      "op": "DUP3"
    },
    "1315": {
      "op": "ADD"
    },
    "1316": {
      "op": "MSTORE"
    },
    "1317": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1352": {
      "op": "DUP3"
    },
    "1353": {
      "op": "ADD"
    },
    "1354": {
      "op": "MSTORE"
    },
    "1355": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1367": {
      "op": "DUP3"
    },
    "1368": {
      "op": "ADD"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1372": {
      "op": "ADD"
    },
    "1373": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31A"
    },
    "1376": {
      "op": "JUMP"
    },
    "1377": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1378": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x56A"
    },
    "1381": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1382": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56D"
    },
    "1385": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "1388": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1389": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1390": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1392": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1393": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1400": {
      "op": "SHL"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 21
    },
    "1403": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1404": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "op": "NOT"
    },
    "1414": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1415": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1416": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "1418": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1419": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1420": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x40"
    },
    "1422": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1423": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1424": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1425": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1426": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1427": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1428": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1429": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1430": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1463": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1464": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1465": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1466": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1467": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1468": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1469": {
      "op": "JUMPDEST"
    },
    "1470": {
      "op": "DUP1"
    },
    "1471": {
      "op": "CALLDATALOAD"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1478": {
      "op": "SHL"
    },
    "1479": {
      "op": "SUB"
    },
    "1480": {
      "op": "DUP2"
    },
    "1481": {
      "op": "AND"
    },
    "1482": {
      "op": "DUP2"
    },
    "1483": {
      "op": "EQ"
    },
    "1484": {
      "op": "PUSH2",
      "value": "0x5D4"
    },
    "1487": {
      "op": "JUMPI"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1490": {
      "op": "DUP1"
    },
    "1491": {
      "op": "REVERT"
    },
    "1492": {
      "op": "JUMPDEST"
    },
    "1493": {
      "op": "SWAP2"
    },
    "1494": {
      "op": "SWAP1"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "jump": "o",
      "op": "JUMP"
    },
    "1497": {
      "op": "JUMPDEST"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1502": {
      "op": "DUP3"
    },
    "1503": {
      "op": "DUP5"
    },
    "1504": {
      "op": "SUB"
    },
    "1505": {
      "op": "SLT"
    },
    "1506": {
      "op": "ISZERO"
    },
    "1507": {
      "op": "PUSH2",
      "value": "0x5EB"
    },
    "1510": {
      "op": "JUMPI"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1513": {
      "op": "DUP1"
    },
    "1514": {
      "op": "REVERT"
    },
    "1515": {
      "op": "JUMPDEST"
    },
    "1516": {
      "op": "PUSH2",
      "value": "0x5F4"
    },
    "1519": {
      "op": "DUP3"
    },
    "1520": {
      "op": "PUSH2",
      "value": "0x5BD"
    },
    "1523": {
      "jump": "i",
      "op": "JUMP"
    },
    "1524": {
      "op": "JUMPDEST"
    },
    "1525": {
      "op": "SWAP4"
    },
    "1526": {
      "op": "SWAP3"
    },
    "1527": {
      "op": "POP"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "jump": "o",
      "op": "JUMP"
    },
    "1531": {
      "op": "JUMPDEST"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "DUP5"
    },
    "1538": {
      "op": "SUB"
    },
    "1539": {
      "op": "SLT"
    },
    "1540": {
      "op": "ISZERO"
    },
    "1541": {
      "op": "PUSH2",
      "value": "0x60D"
    },
    "1544": {
      "op": "JUMPI"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1547": {
      "op": "DUP1"
    },
    "1548": {
      "op": "REVERT"
    },
    "1549": {
      "op": "JUMPDEST"
    },
    "1550": {
      "op": "POP"
    },
    "1551": {
      "op": "MLOAD"
    },
    "1552": {
      "op": "SWAP2"
    },
    "1553": {
      "op": "SWAP1"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "jump": "o",
      "op": "JUMP"
    },
    "1556": {
      "op": "JUMPDEST"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1559": {
      "op": "DUP1"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1562": {
      "op": "DUP1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1565": {
      "op": "DUP6"
    },
    "1566": {
      "op": "DUP8"
    },
    "1567": {
      "op": "SUB"
    },
    "1568": {
      "op": "SLT"
    },
    "1569": {
      "op": "ISZERO"
    },
    "1570": {
      "op": "PUSH2",
      "value": "0x62A"
    },
    "1573": {
      "op": "JUMPI"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1576": {
      "op": "DUP1"
    },
    "1577": {
      "op": "REVERT"
    },
    "1578": {
      "op": "JUMPDEST"
    },
    "1579": {
      "op": "DUP5"
    },
    "1580": {
      "op": "CALLDATALOAD"
    },
    "1581": {
      "op": "SWAP4"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1585": {
      "op": "DUP6"
    },
    "1586": {
      "op": "ADD"
    },
    "1587": {
      "op": "CALLDATALOAD"
    },
    "1588": {
      "op": "DUP1"
    },
    "1589": {
      "op": "ISZERO"
    },
    "1590": {
      "op": "ISZERO"
    },
    "1591": {
      "op": "DUP2"
    },
    "1592": {
      "op": "EQ"
    },
    "1593": {
      "op": "PUSH2",
      "value": "0x641"
    },
    "1596": {
      "op": "JUMPI"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1599": {
      "op": "DUP1"
    },
    "1600": {
      "op": "REVERT"
    },
    "1601": {
      "op": "JUMPDEST"
    },
    "1602": {
      "op": "SWAP3"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "op": "PUSH2",
      "value": "0x64F"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1609": {
      "op": "DUP7"
    },
    "1610": {
      "op": "ADD"
    },
    "1611": {
      "op": "PUSH2",
      "value": "0x5BD"
    },
    "1614": {
      "jump": "i",
      "op": "JUMP"
    },
    "1615": {
      "op": "JUMPDEST"
    },
    "1616": {
      "op": "SWAP4"
    },
    "1617": {
      "op": "SWAP7"
    },
    "1618": {
      "op": "SWAP3"
    },
    "1619": {
      "op": "SWAP6"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "SWAP3"
    },
    "1622": {
      "op": "SWAP4"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1625": {
      "op": "ADD"
    },
    "1626": {
      "op": "CALLDATALOAD"
    },
    "1627": {
      "op": "SWAP3"
    },
    "1628": {
      "op": "POP"
    },
    "1629": {
      "op": "POP"
    },
    "1630": {
      "jump": "o",
      "op": "JUMP"
    },
    "1631": {
      "op": "JUMPDEST"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1634": {
      "op": "DUP1"
    },
    "1635": {
      "op": "DUP3"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "DUP2"
    },
    "1638": {
      "op": "DUP2"
    },
    "1639": {
      "op": "ADD"
    },
    "1640": {
      "op": "MSTORE"
    },
    "1641": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1676": {
      "op": "DUP3"
    },
    "1677": {
      "op": "ADD"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1681": {
      "op": "ADD"
    },
    "1682": {
      "op": "SWAP1"
    },
    "1683": {
      "jump": "o",
      "op": "JUMP"
    },
    "1684": {
      "op": "JUMPDEST"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1687": {
      "op": "DUP3"
    },
    "1688": {
      "op": "NOT"
    },
    "1689": {
      "op": "DUP3"
    },
    "1690": {
      "op": "GT"
    },
    "1691": {
      "op": "ISZERO"
    },
    "1692": {
      "op": "PUSH2",
      "value": "0x6B5"
    },
    "1695": {
      "op": "JUMPI"
    },
    "1696": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1706": {
      "op": "MSTORE"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1716": {
      "op": "REVERT"
    },
    "1717": {
      "op": "JUMPDEST"
    },
    "1718": {
      "op": "POP"
    },
    "1719": {
      "op": "ADD"
    },
    "1720": {
      "op": "SWAP1"
    },
    "1721": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "86b8a229978ab176c4ee1a71849c1ef3e184eb80",
  "source": "pragma solidity ^0.8.0;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol\";\nimport \"./OracleInterface.sol\";\n\ncontract CallerContract is Ownable {\n\n    bool private isKYC = false;\n    OracleInterface private oracleInstance;\n    address private oracleAddress;\n    mapping(uint256=>bool) myRequests;\n\n    struct customer {\n        uint256 customerId;\n        uint32 expireyDate;\n        bool isAuthorized;\n    }\n\n    mapping (address => customer) customerRegistry;\n\n\n    event newOracleAddressEvent(address oracleAddress);\n    event ReceivedNewRequestIdEvent(uint256 id, address customer);\n    event KYCUpdatedEvent(bool isKYC, uint256 id);\n\n    function setOracleInstanceAddress(address _oracleInstanceAddress) public onlyOwner {\n        oracleAddress = _oracleInstanceAddress;\n        oracleInstance = OracleInterface(oracleAddress);\n        emit newOracleAddressEvent(oracleAddress);\n    }\n\n    function updateKYC(address _customer) public {\n        uint256 id = oracleInstance.getKYC(_customer);\n        myRequests[id] = true; \n        emit ReceivedNewRequestIdEvent(id, _customer);\n    }\n\n    function callback(uint256 _customerId, bool _isKYC, address _customer, uint256 _id) public onlyOracle {\n        require(myRequests[_id]);\n        isKYC = _isKYC;\n        customerRegistry[_customer].customerId= _customerId;\n        customerRegistry[_customer].isAuthorized = _isKYC;\n        customerRegistry[_customer].expireyDate = uint32(block.timestamp + 52 weeks);\n        delete myRequests[_id];\n        emit KYCUpdatedEvent(_isKYC, _id);\n    }\n\n    modifier onlyOracle() {\n        require(msg.sender == oracleAddress);\n        _;\n    }\n    function _isAuthorized(address _customer) internal view returns (bool) {\n        return customerRegistry[_customer].isAuthorized;\n    }\n\n    function isAuthorized(address _customer) public view returns(bool) {\n        return _isAuthorized(_customer);\n    }\n\n    function getOracleAddress() public view returns (address) {\n        return oracleAddress;\n    }\n\n    function getCustomerId(address _customer) public view returns (uint256) {\n        return customerRegistry[_customer].customerId;\n    }\n    function getCustomerDate(address _customer) public view returns (uint32) {\n        return customerRegistry[_customer].expireyDate;\n    }\n    function getCustomerAuthorization(address _customer) public view returns (bool) {\n        return customerRegistry[_customer].isAuthorized;\n    }\n}",
  "sourceMap": "139:2320:2:-:0;;;202:5;181:26;;-1:-1:-1;;;;181:26:2;;;139:2320;;;;;;;;;-1:-1:-1;867:23:0;666:10:1;867:9:0;:23::i;:::-;139:2320:2;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;139:2320:2:-;;;;;;;",
  "sourcePath": "contracts/Caller.sol",
  "type": "contract"
}